@model SGW.Portal.Models.WorkflowStepDefinitionModel
@{
    Layout = null;
}

<fieldset>
    <legend>Dados da Etapa</legend>
    <ol>
        <li>
            @Html.LabelFor(m => m.Description)
            @Html.TextBoxFor(m => m.Description)
        </li>
        <li class="fullline">
            @Html.LabelFor(m => m.Comments)
            @Html.TextAreaFor(m => m.Comments)
        </li>
        @if (!Model.InitialState)
        {
        <li class="fullline">
            @Html.LabelFor(m => m.JoinDecisionId)
            @Html.DropDownListFor(m => m.JoinDecisionId, Model.JoinDecisionList, "Selecione", new { style = "width:500px;" })
        </li>
        }

        @switch (Model.StepTypeCommand)
        {
            case "calc":
                    <li class="fullline">
                        @Html.LabelFor(m => m.ActionSQLProcedure)
                        @Html.DropDownListFor(m => m.ActionSQLProcedure, Model.ActionSQLProcedures)
                    </li>                
                    <li class="fullline">
                        @Html.LabelFor(m => m.ActionSQLCommand)
                        @Html.TextAreaFor(m => m.ActionSQLCommand)                    
                    </li>                
                break;
            case "action":
                    <li>
                        @Html.Label("Ação Manual: Descrição")
                        @Html.TextBox("txtManualActionDesc")                    
                    </li>                
                    <li>
                        @Html.Label("Ação Manual: Código")
                        @Html.TextBox("txtManualActionCode")                    
                    </li>                
                    <li class="fullline">
                        <input type="button" onclick="addManualAction();" value="Adicionar Ação" />
                    </li>                
                    <li class="fullline">
                        <table id="manualActionContent">
                            <tr class="header">
                                <th>Codigo</th>
                                <th>Descricao</th>
                                <th>Ação</th>
                            </tr>
                            @foreach (var item in Model.ManualActionList)
                            {
                            <tr id="ma_@item.Code">
                                <td>@item.Code</td>
                                <td>@item.Description</td>
                                <td>@Html.ActionLink("Remover", "RemoveManualAction", null, new { onclick = string.Format(" removeManualAction('{0}'); return false;", item.Code) })</td>
                            </tr>
                            }
                        </table>                
                    </li>
                    <li class="fullline">
                        <br />
                        </li>
                    <script>
                        function addManualAction() {
                            paramData = { code: $('#txtManualActionCode').val(), description: $('#txtManualActionDesc').val(), stepId: '@Model.StepId.ToString()' };

                            $.ajax({
                                type: "POST",
                                url: "/Workflow/AddManualAction",
                                data: JSON.stringify(paramData),
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                error: function (data, errorThrown) {
                                    alert('request /Workflow/AddManualAction failed :' + errorThrown);
                                },
                                success: function (data) {
                                    $('#manualActionContent').append('<tr><td>' + $('#txtManualActionCode').val() + '</td><td>' + $('#txtManualActionDesc').val() + '</td><td><a href="#" onclick="removeManualAction(\'' + $('#txtManualActionCode').val() + '\')">Remover</a></td></tr>');
                                    $('#ddlTranCode').append('<option value="' + $('#txtManualActionCode').val() + '">' + $('#txtManualActionDesc').val() + '</option>');
                                }
                            });                    
                        }
                        function removeManualAction(code) {

                            paramData = { code: code, stepId: '@Model.StepId.ToString()' };

                            $.ajax({
                                type: "POST",
                                url: "/Workflow/RemoveManualAction",
                                data: JSON.stringify(paramData),
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                error: function (data, errorThrown) {
                                    alert('request /Workflow/RemoveManualAction failed :' + errorThrown);
                                },
                                success: function (data) {
                                    $('#manualActionContent #ma_' + code).remove();
                                    $('#ddlTranCode option[value="' + code + '"]').remove();
                                }
                            });
                        }
                    </script>
                            break;
            case "upload":
                    <li class="fullline">
                        @Html.LabelFor(m => m.UploadFileType)
                        @Html.TextBoxFor(m => m.UploadFileType)                    
                    </li>                
                    <li class="fullline">
                        <label class="tip"> Ex: *.txt|*.doc</label>
                    </li>                
                            break;
            case "decision":
                            if (Model.EditMode)
                            {
                            <li>
                                @Html.Label("Código")
                                @Html.TextBox("txtDecisionConditionCode")
                            </li>
                            <li>
                                @Html.Label("Condição de Transição")
                                @Html.TextBox("txtDecisionConditionDesc", "", new { @readonly = true, @class = "readonly" })
                                @Html.Hidden("txtDecisionConditionId")
                            </li>
                            <li class="fullline">
                                <input type="button" value="Selecionar Condição" onclick="selectCondition();" />
                                <input type="button" value="Adicionar Condição" onclick="addCondition();" />
                                @Html.ActionLink("Editar Condições", "ConditionList", "Condition", null, new { target = "_blank" })
                            </li>
                            }

                    <li class="fullline">
                        <table id="conditionContent">
                            <tr class="header">
                                <th>Codigo</th>
                                <th>Condição</th>
                                <th>Ação</th>
                            </tr>
                            @foreach (var item in Model.DecisionConditionList)
                            {
                            <tr id="sc_@item.Code">
                                <td>@item.Code</td>
                                <td>@item.Description</td>
                                <td>@Html.ActionLink("Remover", "RemoveCondition", null, new { onclick = string.Format(" removeCondition('{0}'); return false;", item.Code) })</td>
                            </tr>
                            }
                        </table>                
                    </li>
                    <li class="fullline">
                        <br />
                        </li>
                    <script>
                        function addCondition() {
                            paramData = { code: $('#txtDecisionConditionCode').val(), description: $('#txtDecisionConditionDesc').val(), conditionId: $('#txtDecisionConditionId').val(), stepId: '@Model.StepId.ToString()' };

                            $.ajax({
                                type: "POST",
                                url: "/Workflow/AddDecisionCondition",
                                data: JSON.stringify(paramData),
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                error: function (data, errorThrown) {
                                    alert('request /Workflow/AddDecisionCondition failed :' + errorThrown);
                                },
                                success: function (data) {
                                    $('#conditionContent').append('<tr id="sc_' + $('#txtDecisionConditionCode').val() + '"><td>' + $('#txtDecisionConditionCode').val() + '</td><td>' + $('#txtDecisionConditionDesc').val() + '</td><td><a href="#" onclick="removeCondition(\'' + $('#txtDecisionConditionCode').val() + '\'); return false;">Remover</a></td></tr>')
                                    $('#ddlTranCode').append('<option value="' + $('#txtDecisionConditionCode').val() + '">' + $('#txtDecisionConditionDesc').val() + '</option>');
                                }
                            });
                        }
                        function removeCondition(code) {

                            paramData = { code: code, stepId: '@Model.StepId.ToString()' };

                            $.ajax({
                                type: "POST",
                                url: "/Workflow/RemoveDecisionCondition",
                                data: JSON.stringify(paramData),
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                error: function (data, errorThrown) {
                                    alert('request /Workflow/RemoveDecisionCondition failed :' + errorThrown);
                                },
                                success: function (data) {
                                    $('#conditionContent #sc_' + code).remove();
                                    $('#ddlTranCode option[value="' + code + '"]').remove();
                                }
                            });
                        }
                    </script>
                            break;
            case "notify":
                    <li>
                        @Html.LabelFor(m => m.EmailParticipantId)
                        @Html.DropDownListFor(m => m.EmailParticipantId, Model.ParticipantList.Select(o => new SelectListItem() { Text = string.Format("{0}({1}{2}{3})", o.Description, o.HasRoles ? "Cargos;" : "", o.HasWorkgroups ? "Grupos" : "", o.HasResources ? "Recursos" : ""), Value = o.Id.ToString() }), "Selecione", new { })
                    </li>                
                    <li>
                        @Html.LabelFor(m => m.EmailTo)
                        @Html.TextBoxFor(m => m.EmailTo)                    
                    </li>                
                    <li class="fullline">
                        @Html.LabelFor(m => m.EmailSubject)
                        @Html.TextBoxFor(m => m.EmailSubject)                    
                    </li>                
                    <li class="fullline">
                        @Html.LabelFor(m => m.EmailBody)
                        @Html.TextAreaFor(m => m.EmailBody)
                    </li>                            
                            break;
        }
        @if (Model.StepTypeCommand.Equals("upload") || Model.StepTypeCommand.Equals("action"))
        {
        <li class="fullline">
            @Html.LabelFor(m => m.ParticipantId)
            @Html.DropDownListFor(m => m.ParticipantId, Model.ParticipantList.Select(o => new SelectListItem() { Text = string.Format("{0}({1}{2}{3})", o.Description, o.HasRoles ? "Cargos;" : "", o.HasWorkgroups ? "Grupos" : "", o.HasResources ? "Recursos" : ""), Value = o.Id.ToString() }), "Selecione", new { style = "width:500px;" })
        </li>
        }
        @if (Model.StepTypeCommand.Equals("action") || Model.StepTypeCommand.Equals("decision"))
        {
                    <li>
                        @Html.Label("Decisão de Transição: Código")
                        @Html.DropDownList("ddlTranCode", Model.TransitionCodeList, "Selecione")                    
                    </li>                
                    <li>
                        @Html.Label("Transição")
                        @Html.DropDownList("ddlTran", Model.TransitionList, "Selecione")                    
                    </li>                
                    <li class="fullline">
                        <input type="button" onclick="addTranDecision();" value="Adicionar Decisão" />
                    </li>                
                    <li class="fullline">
                        <table id="tranDecisionContent">
                            <tr class="header">
                                <th>Codigo</th>
                                <th>Transição</th>
                                <th>Ação</th>
                            </tr>
                            @foreach (var item in Model.TransitionDecisionList )
                            {
                            <tr id="sd_@item.Code">
                                <td>@item.Code</td>
                                <td>@item.TransitionDescription</td>
                                <td>@Html.ActionLink("Remover", "RemoveTranDecision", null, new { onclick = string.Format(" removeTranDecision('{0}'); return false;", item.Code) })</td>
                            </tr>
                            }
                        </table>                
                    </li>
                    <li class="fullline">
                        <br />
                        </li>
                    <script>
                        function addTranDecision() {
                            paramData = { code: $('#ddlTranCode').val(), description: $('#ddlTran option:selected').text(), transitionId: $('#ddlTran').val(), stepId: '@Model.StepId.ToString()' };

                            $.ajax({
                                type: "POST",
                                url: "/Workflow/AddTranDecision",
                                data: JSON.stringify(paramData),
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                error: function (data, errorThrown) {
                                    alert('request /Workflow/AddTranDecision failed :' + errorThrown);
                                },
                                success: function (data) {
                                    $('#tranDecisionContent').append('<tr id="sd_' + $('#ddlTranCode').val() + '"><td>' + $('#ddlTranCode').val() + '</td><td>' + $('#ddlTran option:selected').text() + '</td><td><a href="#" onclick="removeTranDecision("' + $('#ddlTranCode').val() + '"); return false;">Remover</a></td></tr>')
                                }
                            });
                        }
                        function removeTranDecision(code) {

                            paramData = { code: code, stepId: '@Model.StepId.ToString()' };

                            $.ajax({
                                type: "POST",
                                url: "/Workflow/RemoveTranDecision",
                                data: JSON.stringify(paramData),
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                error: function (data, errorThrown) {
                                    alert('request /Workflow/RemoveTranDecision failed :' + errorThrown);
                                },
                                success: function (data) {
                                    $('#tranDecisionContent #sd_' + code).remove();
                                }
                            });
                        }
                    </script>
        }

            @Html.HiddenFor(m => m.StepId)
            @Html.HiddenFor(m => m.InitialState)
            @Html.HiddenFor(m => m.Left)
            @Html.HiddenFor(m => m.Top)
            @Html.HiddenFor(m => m.FromStateId)
            @Html.HiddenFor(m => m.StepTypeId)
            @Html.HiddenFor(m => m.EntityId)
            @Html.HiddenFor(m => m.StepName)
            @Html.HiddenFor(m => m.WorkflowId)
    </ol>       
</fieldset>

<div id="selectCondition" title="Selecionar Condição" style="background-color:white;">
     @Html.Partial("Partial/SelectCondition", Model.ConditionList)
</div>

<script>

    function onSaveStepDefinition() {

        if ($('#stepDefinition #@Html.IdFor(m => m.Description)').val() == '') {
            alert('Campo Descrição Obrigatório!');
            return false;
        }

        stepId = $('#stepDefinition #@Html.IdFor(m => m.StepId)').val();
        stepName = $('#stepDefinition #@Html.IdFor(m => m.StepName)').val();
        initial = $('#stepDefinition #@Html.IdFor(m => m.InitialState)')[0].checked;

        paramData = { leftPos: $('#stepDefinition #@Html.IdFor(m => m.Left)').val(), topPos: $('#stepDefinition #@Html.IdFor(m => m.Top)').val(), description: $('#stepDefinition #@Html.IdFor(m => m.Description)').val(), workflowId: $('#stepDefinition #@Html.IdFor(m => m.WorkflowId)').val(), fromStateId: $('#stepDefinition #@Html.IdFor(m => m.FromStateId)').val(), stepId: stepId, comments: $('#stepDefinition #@Html.IdFor(m => m.Comments)').val(), joinDecision: $('#stepDefinition #@Html.IdFor(m => m.JoinDecisionId)').val(), participantId: $('#stepDefinition #@Html.IdFor(m => m.ParticipantId)').val(), stepTypeId: $('#stepDefinition #@Html.IdFor(m => m.StepTypeId)').val(), initialState: initial };

        $.ajax({
            type: "POST",
            url: "/Workflow/AddStep",
            data: JSON.stringify(paramData),
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            error: function (data, errorThrown) {
                alert('request /Workflow/AddStep failed :' + errorThrown);
                if (stepId == '00000000-0000-0000-0000-000000000000')
                    $('#' + stepName).remove();
            },
            success: function (data) {
                if (stepId == '00000000-0000-0000-0000-000000000000') {
                    stepId = data.Id;
                    if (stepId != '00000000-0000-0000-0000-000000000000') {
                        $('#' + stepName).attr("id", 'step_' + stepId);
                        $('#step_' + stepId + ' label')[0].innerText = $('#stepDefinition #@Html.IdFor(m => m.Description)').val();
                        if (initial)
                            $('#step_' + stepId + ' img')[0].src = "../Images/initialState.png";
                    }
                    else {
                        alert(data.Message);
                        $('#' + stepName).remove();
                    }
                }
                else {
                    $('#step_' + stepId + ' label')[0].innerText = $('#stepDefinition #@Html.IdFor(m => m.Description)').val();
                    if (initial)
                        $('#step_' + stepId + ' img')[0].src = "../Images/initialState.png";
                }
            }
        });

        return true;
    }

    function selectCondition() {
        $('#selectCondition tr[class!="header"]').css({ 'display': 'none' });
        $('#selectCondition tr[entityId="' + $('#@Html.IdFor(m => m.EntityId)').val() + '"]').css({ 'display': 'block' });

        $('#selectCondition #txtConditionId').val('');
        $('#selectCondition #txtConditionText').val('');
        $('#selectCondition #txtConditionDesc').val('');

            $('#selectCondition').dialog({
                autoOpen: false,
                height: 600,
                width: 950,
                modal: true,
                buttons:
                {
                    "Selecionar": function () {
                        conditionId = $('#selectCondition #txtConditionId').val();
                        if (conditionId != '') {
                            $('#txtDecisionConditionId').val($('#selectCondition #txtConditionId').val());
                            $('#txtDecisionConditionDesc').val($('#selectCondition #txtConditionDesc').val());
                    }

                    $(this).dialog("close");
                }
            }
        });

        $('#selectCondition').dialog('open');
    }

    $('#selectCondition').dialog({
        autoOpen: false,
    });

</script>