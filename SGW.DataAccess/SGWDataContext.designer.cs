#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGW.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SGW")]
	public partial class SGWDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSGW_Access(SGW_Access instance);
    partial void UpdateSGW_Access(SGW_Access instance);
    partial void DeleteSGW_Access(SGW_Access instance);
    partial void InsertSGW_WorkgroupMember(SGW_WorkgroupMember instance);
    partial void UpdateSGW_WorkgroupMember(SGW_WorkgroupMember instance);
    partial void DeleteSGW_WorkgroupMember(SGW_WorkgroupMember instance);
    partial void InsertSGW_Attachment(SGW_Attachment instance);
    partial void UpdateSGW_Attachment(SGW_Attachment instance);
    partial void DeleteSGW_Attachment(SGW_Attachment instance);
    partial void InsertSGW_Condition(SGW_Condition instance);
    partial void UpdateSGW_Condition(SGW_Condition instance);
    partial void DeleteSGW_Condition(SGW_Condition instance);
    partial void InsertSGW_ConditionDetail(SGW_ConditionDetail instance);
    partial void UpdateSGW_ConditionDetail(SGW_ConditionDetail instance);
    partial void DeleteSGW_ConditionDetail(SGW_ConditionDetail instance);
    partial void InsertSGW_Entity(SGW_Entity instance);
    partial void UpdateSGW_Entity(SGW_Entity instance);
    partial void DeleteSGW_Entity(SGW_Entity instance);
    partial void InsertSGW_EntityField(SGW_EntityField instance);
    partial void UpdateSGW_EntityField(SGW_EntityField instance);
    partial void DeleteSGW_EntityField(SGW_EntityField instance);
    partial void InsertSGW_EntityInstance(SGW_EntityInstance instance);
    partial void UpdateSGW_EntityInstance(SGW_EntityInstance instance);
    partial void DeleteSGW_EntityInstance(SGW_EntityInstance instance);
    partial void InsertSGW_EntityStatus(SGW_EntityStatus instance);
    partial void UpdateSGW_EntityStatus(SGW_EntityStatus instance);
    partial void DeleteSGW_EntityStatus(SGW_EntityStatus instance);
    partial void InsertSGW_Resource(SGW_Resource instance);
    partial void UpdateSGW_Resource(SGW_Resource instance);
    partial void DeleteSGW_Resource(SGW_Resource instance);
    partial void InsertSGW_Role(SGW_Role instance);
    partial void UpdateSGW_Role(SGW_Role instance);
    partial void DeleteSGW_Role(SGW_Role instance);
    partial void InsertSGW_RoleMember(SGW_RoleMember instance);
    partial void UpdateSGW_RoleMember(SGW_RoleMember instance);
    partial void DeleteSGW_RoleMember(SGW_RoleMember instance);
    partial void InsertSGW_StepType(SGW_StepType instance);
    partial void UpdateSGW_StepType(SGW_StepType instance);
    partial void DeleteSGW_StepType(SGW_StepType instance);
    partial void InsertSGW_Workflow(SGW_Workflow instance);
    partial void UpdateSGW_Workflow(SGW_Workflow instance);
    partial void DeleteSGW_Workflow(SGW_Workflow instance);
    partial void InsertSGW_WorkflowInstance(SGW_WorkflowInstance instance);
    partial void UpdateSGW_WorkflowInstance(SGW_WorkflowInstance instance);
    partial void DeleteSGW_WorkflowInstance(SGW_WorkflowInstance instance);
    partial void InsertSGW_WorkflowInstanceAssignment(SGW_WorkflowInstanceAssignment instance);
    partial void UpdateSGW_WorkflowInstanceAssignment(SGW_WorkflowInstanceAssignment instance);
    partial void DeleteSGW_WorkflowInstanceAssignment(SGW_WorkflowInstanceAssignment instance);
    partial void InsertSGW_WorkflowParticipant(SGW_WorkflowParticipant instance);
    partial void UpdateSGW_WorkflowParticipant(SGW_WorkflowParticipant instance);
    partial void DeleteSGW_WorkflowParticipant(SGW_WorkflowParticipant instance);
    partial void InsertSGW_WorkflowParticipantMember(SGW_WorkflowParticipantMember instance);
    partial void UpdateSGW_WorkflowParticipantMember(SGW_WorkflowParticipantMember instance);
    partial void DeleteSGW_WorkflowParticipantMember(SGW_WorkflowParticipantMember instance);
    partial void InsertSGW_WorkflowState(SGW_WorkflowState instance);
    partial void UpdateSGW_WorkflowState(SGW_WorkflowState instance);
    partial void DeleteSGW_WorkflowState(SGW_WorkflowState instance);
    partial void InsertSGW_WorkflowStateTransition(SGW_WorkflowStateTransition instance);
    partial void UpdateSGW_WorkflowStateTransition(SGW_WorkflowStateTransition instance);
    partial void DeleteSGW_WorkflowStateTransition(SGW_WorkflowStateTransition instance);
    partial void InsertSGW_WorkflowStep(SGW_WorkflowStep instance);
    partial void UpdateSGW_WorkflowStep(SGW_WorkflowStep instance);
    partial void DeleteSGW_WorkflowStep(SGW_WorkflowStep instance);
    partial void InsertSGW_WorkflowStepSplitDecision(SGW_WorkflowStepSplitDecision instance);
    partial void UpdateSGW_WorkflowStepSplitDecision(SGW_WorkflowStepSplitDecision instance);
    partial void DeleteSGW_WorkflowStepSplitDecision(SGW_WorkflowStepSplitDecision instance);
    partial void InsertSGW_WorkflowStepTransition(SGW_WorkflowStepTransition instance);
    partial void UpdateSGW_WorkflowStepTransition(SGW_WorkflowStepTransition instance);
    partial void DeleteSGW_WorkflowStepTransition(SGW_WorkflowStepTransition instance);
    partial void InsertSGW_Workgroup(SGW_Workgroup instance);
    partial void UpdateSGW_Workgroup(SGW_Workgroup instance);
    partial void DeleteSGW_Workgroup(SGW_Workgroup instance);
    #endregion
		
		public SGWDataContext() : 
				base(global::SGW.DataAccess.Properties.Settings.Default.SGWConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SGWDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGWDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGWDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGWDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SGW_Access> SGW_Accesses
		{
			get
			{
				return this.GetTable<SGW_Access>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkgroupMember> SGW_WorkgroupMembers
		{
			get
			{
				return this.GetTable<SGW_WorkgroupMember>();
			}
		}
		
		public System.Data.Linq.Table<SGW_Attachment> SGW_Attachments
		{
			get
			{
				return this.GetTable<SGW_Attachment>();
			}
		}
		
		public System.Data.Linq.Table<SGW_Condition> SGW_Conditions
		{
			get
			{
				return this.GetTable<SGW_Condition>();
			}
		}
		
		public System.Data.Linq.Table<SGW_ConditionDetail> SGW_ConditionDetails
		{
			get
			{
				return this.GetTable<SGW_ConditionDetail>();
			}
		}
		
		public System.Data.Linq.Table<SGW_Entity> SGW_Entities
		{
			get
			{
				return this.GetTable<SGW_Entity>();
			}
		}
		
		public System.Data.Linq.Table<SGW_EntityField> SGW_EntityFields
		{
			get
			{
				return this.GetTable<SGW_EntityField>();
			}
		}
		
		public System.Data.Linq.Table<SGW_EntityInstance> SGW_EntityInstances
		{
			get
			{
				return this.GetTable<SGW_EntityInstance>();
			}
		}
		
		public System.Data.Linq.Table<SGW_EntityStatus> SGW_EntityStatus
		{
			get
			{
				return this.GetTable<SGW_EntityStatus>();
			}
		}
		
		public System.Data.Linq.Table<SGW_Resource> SGW_Resources
		{
			get
			{
				return this.GetTable<SGW_Resource>();
			}
		}
		
		public System.Data.Linq.Table<SGW_Role> SGW_Roles
		{
			get
			{
				return this.GetTable<SGW_Role>();
			}
		}
		
		public System.Data.Linq.Table<SGW_RoleMember> SGW_RoleMembers
		{
			get
			{
				return this.GetTable<SGW_RoleMember>();
			}
		}
		
		public System.Data.Linq.Table<SGW_StepType> SGW_StepTypes
		{
			get
			{
				return this.GetTable<SGW_StepType>();
			}
		}
		
		public System.Data.Linq.Table<SGW_Workflow> SGW_Workflows
		{
			get
			{
				return this.GetTable<SGW_Workflow>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowInstance> SGW_WorkflowInstances
		{
			get
			{
				return this.GetTable<SGW_WorkflowInstance>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowInstanceAssignment> SGW_WorkflowInstanceAssignments
		{
			get
			{
				return this.GetTable<SGW_WorkflowInstanceAssignment>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowParticipant> SGW_WorkflowParticipants
		{
			get
			{
				return this.GetTable<SGW_WorkflowParticipant>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowParticipantMember> SGW_WorkflowParticipantMembers
		{
			get
			{
				return this.GetTable<SGW_WorkflowParticipantMember>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowState> SGW_WorkflowStates
		{
			get
			{
				return this.GetTable<SGW_WorkflowState>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowStateTransition> SGW_WorkflowStateTransitions
		{
			get
			{
				return this.GetTable<SGW_WorkflowStateTransition>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowStep> SGW_WorkflowSteps
		{
			get
			{
				return this.GetTable<SGW_WorkflowStep>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowStepSplitDecision> SGW_WorkflowStepSplitDecisions
		{
			get
			{
				return this.GetTable<SGW_WorkflowStepSplitDecision>();
			}
		}
		
		public System.Data.Linq.Table<SGW_WorkflowStepTransition> SGW_WorkflowStepTransitions
		{
			get
			{
				return this.GetTable<SGW_WorkflowStepTransition>();
			}
		}
		
		public System.Data.Linq.Table<SGW_Workgroup> SGW_Workgroups
		{
			get
			{
				return this.GetTable<SGW_Workgroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Access")]
	public partial class SGW_Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AccessId;
		
		private System.Guid _RecordId;
		
		private System.Guid _ParticipantId;
		
		private string _EntityType;
		
		private string _TableName;
		
		private bool _ReadAccess;
		
		private bool _WriteAccess;
		
		private bool _AdminAccess;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntityRef<SGW_WorkflowParticipant> _SGW_WorkflowParticipant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessIdChanging(System.Guid value);
    partial void OnAccessIdChanged();
    partial void OnRecordIdChanging(System.Guid value);
    partial void OnRecordIdChanged();
    partial void OnParticipantIdChanging(System.Guid value);
    partial void OnParticipantIdChanged();
    partial void OnEntityTypeChanging(string value);
    partial void OnEntityTypeChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnReadAccessChanging(bool value);
    partial void OnReadAccessChanged();
    partial void OnWriteAccessChanging(bool value);
    partial void OnWriteAccessChanged();
    partial void OnAdminAccessChanging(bool value);
    partial void OnAdminAccessChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_Access()
		{
			this._SGW_WorkflowParticipant = default(EntityRef<SGW_WorkflowParticipant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AccessId
		{
			get
			{
				return this._AccessId;
			}
			set
			{
				if ((this._AccessId != value))
				{
					this.OnAccessIdChanging(value);
					this.SendPropertyChanging();
					this._AccessId = value;
					this.SendPropertyChanged("AccessId");
					this.OnAccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					if (this._SGW_WorkflowParticipant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadAccess", DbType="Bit NOT NULL")]
		public bool ReadAccess
		{
			get
			{
				return this._ReadAccess;
			}
			set
			{
				if ((this._ReadAccess != value))
				{
					this.OnReadAccessChanging(value);
					this.SendPropertyChanging();
					this._ReadAccess = value;
					this.SendPropertyChanged("ReadAccess");
					this.OnReadAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WriteAccess", DbType="Bit NOT NULL")]
		public bool WriteAccess
		{
			get
			{
				return this._WriteAccess;
			}
			set
			{
				if ((this._WriteAccess != value))
				{
					this.OnWriteAccessChanging(value);
					this.SendPropertyChanging();
					this._WriteAccess = value;
					this.SendPropertyChanged("WriteAccess");
					this.OnWriteAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminAccess", DbType="Bit NOT NULL")]
		public bool AdminAccess
		{
			get
			{
				return this._AdminAccess;
			}
			set
			{
				if ((this._AdminAccess != value))
				{
					this.OnAdminAccessChanging(value);
					this.SendPropertyChanging();
					this._AdminAccess = value;
					this.SendPropertyChanged("AdminAccess");
					this.OnAdminAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowParticipant_SGW_Access", Storage="_SGW_WorkflowParticipant", ThisKey="ParticipantId", OtherKey="ParticipantId", IsForeignKey=true)]
		public SGW_WorkflowParticipant SGW_WorkflowParticipant
		{
			get
			{
				return this._SGW_WorkflowParticipant.Entity;
			}
			set
			{
				SGW_WorkflowParticipant previousValue = this._SGW_WorkflowParticipant.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowParticipant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowParticipant.Entity = null;
						previousValue.SGW_Accesses.Remove(this);
					}
					this._SGW_WorkflowParticipant.Entity = value;
					if ((value != null))
					{
						value.SGW_Accesses.Add(this);
						this._ParticipantId = value.ParticipantId;
					}
					else
					{
						this._ParticipantId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowParticipant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkgroupMember")]
	public partial class SGW_WorkgroupMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ResourceId;
		
		private System.Guid _WorkgroupId;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private EntityRef<SGW_Resource> _SGW_Resource;
		
		private EntityRef<SGW_Workgroup> _SGW_Workgroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIdChanging(System.Guid value);
    partial void OnResourceIdChanged();
    partial void OnWorkgroupIdChanging(System.Guid value);
    partial void OnWorkgroupIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public SGW_WorkgroupMember()
		{
			this._SGW_Resource = default(EntityRef<SGW_Resource>);
			this._SGW_Workgroup = default(EntityRef<SGW_Workgroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this._SGW_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkgroupId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WorkgroupId
		{
			get
			{
				return this._WorkgroupId;
			}
			set
			{
				if ((this._WorkgroupId != value))
				{
					if (this._SGW_Workgroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkgroupIdChanging(value);
					this.SendPropertyChanging();
					this._WorkgroupId = value;
					this.SendPropertyChanged("WorkgroupId");
					this.OnWorkgroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Resource_SGW_WorkgroupMember", Storage="_SGW_Resource", ThisKey="ResourceId", OtherKey="ResourceId", IsForeignKey=true)]
		public SGW_Resource SGW_Resource
		{
			get
			{
				return this._SGW_Resource.Entity;
			}
			set
			{
				SGW_Resource previousValue = this._SGW_Resource.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Resource.Entity = null;
						previousValue.SGW_WorkgroupMembers.Remove(this);
					}
					this._SGW_Resource.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkgroupMembers.Add(this);
						this._ResourceId = value.ResourceId;
					}
					else
					{
						this._ResourceId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workgroup_SGW_WorkgroupMember", Storage="_SGW_Workgroup", ThisKey="WorkgroupId", OtherKey="WorkgroupId", IsForeignKey=true)]
		public SGW_Workgroup SGW_Workgroup
		{
			get
			{
				return this._SGW_Workgroup.Entity;
			}
			set
			{
				SGW_Workgroup previousValue = this._SGW_Workgroup.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Workgroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Workgroup.Entity = null;
						previousValue.SGW_WorkgroupMembers.Remove(this);
					}
					this._SGW_Workgroup.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkgroupMembers.Add(this);
						this._WorkgroupId = value.WorkgroupId;
					}
					else
					{
						this._WorkgroupId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Workgroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Attachment")]
	public partial class SGW_Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AttachmentId;
		
		private System.Guid _EntityInstanceId;
		
		private System.Guid _StepId;
		
		private string _Name;
		
		private string _Comments;
		
		private System.Data.Linq.Binary _AttachedFile;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private EntityRef<SGW_EntityInstance> _SGW_EntityInstance;
		
		private EntityRef<SGW_WorkflowStep> _SGW_WorkflowStep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIdChanging(System.Guid value);
    partial void OnAttachmentIdChanged();
    partial void OnEntityInstanceIdChanging(System.Guid value);
    partial void OnEntityInstanceIdChanged();
    partial void OnStepIdChanging(System.Guid value);
    partial void OnStepIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnAttachedFileChanging(System.Data.Linq.Binary value);
    partial void OnAttachedFileChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public SGW_Attachment()
		{
			this._SGW_EntityInstance = default(EntityRef<SGW_EntityInstance>);
			this._SGW_WorkflowStep = default(EntityRef<SGW_WorkflowStep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AttachmentId
		{
			get
			{
				return this._AttachmentId;
			}
			set
			{
				if ((this._AttachmentId != value))
				{
					this.OnAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentId = value;
					this.SendPropertyChanged("AttachmentId");
					this.OnAttachmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityInstanceId
		{
			get
			{
				return this._EntityInstanceId;
			}
			set
			{
				if ((this._EntityInstanceId != value))
				{
					if (this._SGW_EntityInstance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._EntityInstanceId = value;
					this.SendPropertyChanged("EntityInstanceId");
					this.OnEntityInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StepId
		{
			get
			{
				return this._StepId;
			}
			set
			{
				if ((this._StepId != value))
				{
					if (this._SGW_WorkflowStep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStepIdChanging(value);
					this.SendPropertyChanging();
					this._StepId = value;
					this.SendPropertyChanged("StepId");
					this.OnStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFile", DbType="Binary(1)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AttachedFile
		{
			get
			{
				return this._AttachedFile;
			}
			set
			{
				if ((this._AttachedFile != value))
				{
					this.OnAttachedFileChanging(value);
					this.SendPropertyChanging();
					this._AttachedFile = value;
					this.SendPropertyChanged("AttachedFile");
					this.OnAttachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_EntityInstance_SGW_Attachment", Storage="_SGW_EntityInstance", ThisKey="EntityInstanceId", OtherKey="EntityInstanceId", IsForeignKey=true)]
		public SGW_EntityInstance SGW_EntityInstance
		{
			get
			{
				return this._SGW_EntityInstance.Entity;
			}
			set
			{
				SGW_EntityInstance previousValue = this._SGW_EntityInstance.Entity;
				if (((previousValue != value) 
							|| (this._SGW_EntityInstance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_EntityInstance.Entity = null;
						previousValue.SGW_Attachments.Remove(this);
					}
					this._SGW_EntityInstance.Entity = value;
					if ((value != null))
					{
						value.SGW_Attachments.Add(this);
						this._EntityInstanceId = value.EntityInstanceId;
					}
					else
					{
						this._EntityInstanceId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_EntityInstance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_Attachment", Storage="_SGW_WorkflowStep", ThisKey="StepId", OtherKey="StepId", IsForeignKey=true)]
		public SGW_WorkflowStep SGW_WorkflowStep
		{
			get
			{
				return this._SGW_WorkflowStep.Entity;
			}
			set
			{
				SGW_WorkflowStep previousValue = this._SGW_WorkflowStep.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowStep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowStep.Entity = null;
						previousValue.SGW_Attachments.Remove(this);
					}
					this._SGW_WorkflowStep.Entity = value;
					if ((value != null))
					{
						value.SGW_Attachments.Add(this);
						this._StepId = value.StepId;
					}
					else
					{
						this._StepId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowStep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Condition")]
	public partial class SGW_Condition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ConditionId;
		
		private System.Guid _EntityId;
		
		private string _Name;
		
		private string _ConditionType;
		
		private string _StoredProcedure;
		
		private string _SQLCommand;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_ConditionDetail> _SGW_ConditionDetails;
		
		private EntitySet<SGW_Workflow> _SGW_Workflows;
		
		private EntitySet<SGW_WorkflowStepSplitDecision> _SGW_WorkflowStepSplitDecisions;
		
		private EntityRef<SGW_Entity> _SGW_Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionIdChanging(System.Guid value);
    partial void OnConditionIdChanged();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnConditionTypeChanging(string value);
    partial void OnConditionTypeChanged();
    partial void OnStoredProcedureChanging(string value);
    partial void OnStoredProcedureChanged();
    partial void OnSQLCommandChanging(string value);
    partial void OnSQLCommandChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_Condition()
		{
			this._SGW_ConditionDetails = new EntitySet<SGW_ConditionDetail>(new Action<SGW_ConditionDetail>(this.attach_SGW_ConditionDetails), new Action<SGW_ConditionDetail>(this.detach_SGW_ConditionDetails));
			this._SGW_Workflows = new EntitySet<SGW_Workflow>(new Action<SGW_Workflow>(this.attach_SGW_Workflows), new Action<SGW_Workflow>(this.detach_SGW_Workflows));
			this._SGW_WorkflowStepSplitDecisions = new EntitySet<SGW_WorkflowStepSplitDecision>(new Action<SGW_WorkflowStepSplitDecision>(this.attach_SGW_WorkflowStepSplitDecisions), new Action<SGW_WorkflowStepSplitDecision>(this.detach_SGW_WorkflowStepSplitDecisions));
			this._SGW_Entity = default(EntityRef<SGW_Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ConditionId
		{
			get
			{
				return this._ConditionId;
			}
			set
			{
				if ((this._ConditionId != value))
				{
					this.OnConditionIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionId = value;
					this.SendPropertyChanged("ConditionId");
					this.OnConditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					if (this._SGW_Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionType", DbType="NVarChar(5)")]
		public string ConditionType
		{
			get
			{
				return this._ConditionType;
			}
			set
			{
				if ((this._ConditionType != value))
				{
					this.OnConditionTypeChanging(value);
					this.SendPropertyChanging();
					this._ConditionType = value;
					this.SendPropertyChanged("ConditionType");
					this.OnConditionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoredProcedure", DbType="NVarChar(500)")]
		public string StoredProcedure
		{
			get
			{
				return this._StoredProcedure;
			}
			set
			{
				if ((this._StoredProcedure != value))
				{
					this.OnStoredProcedureChanging(value);
					this.SendPropertyChanging();
					this._StoredProcedure = value;
					this.SendPropertyChanged("StoredProcedure");
					this.OnStoredProcedureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQLCommand", DbType="NVarChar(MAX)")]
		public string SQLCommand
		{
			get
			{
				return this._SQLCommand;
			}
			set
			{
				if ((this._SQLCommand != value))
				{
					this.OnSQLCommandChanging(value);
					this.SendPropertyChanging();
					this._SQLCommand = value;
					this.SendPropertyChanged("SQLCommand");
					this.OnSQLCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Condition_SGW_ConditionDetail", Storage="_SGW_ConditionDetails", ThisKey="ConditionId", OtherKey="ConditionId")]
		public EntitySet<SGW_ConditionDetail> SGW_ConditionDetails
		{
			get
			{
				return this._SGW_ConditionDetails;
			}
			set
			{
				this._SGW_ConditionDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Condition_SGW_Workflow", Storage="_SGW_Workflows", ThisKey="ConditionId", OtherKey="TriggerConditionId")]
		public EntitySet<SGW_Workflow> SGW_Workflows
		{
			get
			{
				return this._SGW_Workflows;
			}
			set
			{
				this._SGW_Workflows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Condition_SGW_WorkflowStepSplitDecision", Storage="_SGW_WorkflowStepSplitDecisions", ThisKey="ConditionId", OtherKey="TriggerConditionId")]
		public EntitySet<SGW_WorkflowStepSplitDecision> SGW_WorkflowStepSplitDecisions
		{
			get
			{
				return this._SGW_WorkflowStepSplitDecisions;
			}
			set
			{
				this._SGW_WorkflowStepSplitDecisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_Condition", Storage="_SGW_Entity", ThisKey="EntityId", OtherKey="EntityId", IsForeignKey=true)]
		public SGW_Entity SGW_Entity
		{
			get
			{
				return this._SGW_Entity.Entity;
			}
			set
			{
				SGW_Entity previousValue = this._SGW_Entity.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Entity.Entity = null;
						previousValue.SGW_Conditions.Remove(this);
					}
					this._SGW_Entity.Entity = value;
					if ((value != null))
					{
						value.SGW_Conditions.Add(this);
						this._EntityId = value.EntityId;
					}
					else
					{
						this._EntityId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_ConditionDetails(SGW_ConditionDetail entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Condition = this;
		}
		
		private void detach_SGW_ConditionDetails(SGW_ConditionDetail entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Condition = null;
		}
		
		private void attach_SGW_Workflows(SGW_Workflow entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Condition = this;
		}
		
		private void detach_SGW_Workflows(SGW_Workflow entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Condition = null;
		}
		
		private void attach_SGW_WorkflowStepSplitDecisions(SGW_WorkflowStepSplitDecision entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Condition = this;
		}
		
		private void detach_SGW_WorkflowStepSplitDecisions(SGW_WorkflowStepSplitDecision entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Condition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_ConditionDetail")]
	public partial class SGW_ConditionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ConditionId;
		
		private System.Guid _ConditionDetailId;
		
		private string _GroupIdentifier;
		
		private string _Field;
		
		private string _Operator;
		
		private string _Value1;
		
		private string _Value2;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntityRef<SGW_Condition> _SGW_Condition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionIdChanging(System.Guid value);
    partial void OnConditionIdChanged();
    partial void OnConditionDetailIdChanging(System.Guid value);
    partial void OnConditionDetailIdChanged();
    partial void OnGroupIdentifierChanging(string value);
    partial void OnGroupIdentifierChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnValue1Changing(string value);
    partial void OnValue1Changed();
    partial void OnValue2Changing(string value);
    partial void OnValue2Changed();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_ConditionDetail()
		{
			this._SGW_Condition = default(EntityRef<SGW_Condition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ConditionId
		{
			get
			{
				return this._ConditionId;
			}
			set
			{
				if ((this._ConditionId != value))
				{
					if (this._SGW_Condition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionId = value;
					this.SendPropertyChanged("ConditionId");
					this.OnConditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionDetailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ConditionDetailId
		{
			get
			{
				return this._ConditionDetailId;
			}
			set
			{
				if ((this._ConditionDetailId != value))
				{
					this.OnConditionDetailIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionDetailId = value;
					this.SendPropertyChanged("ConditionDetailId");
					this.OnConditionDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIdentifier", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupIdentifier
		{
			get
			{
				return this._GroupIdentifier;
			}
			set
			{
				if ((this._GroupIdentifier != value))
				{
					this.OnGroupIdentifierChanging(value);
					this.SendPropertyChanging();
					this._GroupIdentifier = value;
					this.SendPropertyChanged("GroupIdentifier");
					this.OnGroupIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value1", DbType="NVarChar(MAX)")]
		public string Value1
		{
			get
			{
				return this._Value1;
			}
			set
			{
				if ((this._Value1 != value))
				{
					this.OnValue1Changing(value);
					this.SendPropertyChanging();
					this._Value1 = value;
					this.SendPropertyChanged("Value1");
					this.OnValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value2", DbType="NVarChar(MAX)")]
		public string Value2
		{
			get
			{
				return this._Value2;
			}
			set
			{
				if ((this._Value2 != value))
				{
					this.OnValue2Changing(value);
					this.SendPropertyChanging();
					this._Value2 = value;
					this.SendPropertyChanged("Value2");
					this.OnValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Condition_SGW_ConditionDetail", Storage="_SGW_Condition", ThisKey="ConditionId", OtherKey="ConditionId", IsForeignKey=true)]
		public SGW_Condition SGW_Condition
		{
			get
			{
				return this._SGW_Condition.Entity;
			}
			set
			{
				SGW_Condition previousValue = this._SGW_Condition.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Condition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Condition.Entity = null;
						previousValue.SGW_ConditionDetails.Remove(this);
					}
					this._SGW_Condition.Entity = value;
					if ((value != null))
					{
						value.SGW_ConditionDetails.Add(this);
						this._ConditionId = value.ConditionId;
					}
					else
					{
						this._ConditionId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Condition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Entity")]
	public partial class SGW_Entity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EntityId;
		
		private string _Name;
		
		private string _EntityType;
		
		private string _SQLTableName;
		
		private string _StatusFieldName;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_Condition> _SGW_Conditions;
		
		private EntitySet<SGW_EntityField> _SGW_EntityFields;
		
		private EntitySet<SGW_EntityInstance> _SGW_EntityInstances;
		
		private EntitySet<SGW_EntityStatus> _SGW_EntityStatus;
		
		private EntitySet<SGW_Workflow> _SGW_Workflows;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEntityTypeChanging(string value);
    partial void OnEntityTypeChanged();
    partial void OnSQLTableNameChanging(string value);
    partial void OnSQLTableNameChanged();
    partial void OnStatusFieldNameChanging(string value);
    partial void OnStatusFieldNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_Entity()
		{
			this._SGW_Conditions = new EntitySet<SGW_Condition>(new Action<SGW_Condition>(this.attach_SGW_Conditions), new Action<SGW_Condition>(this.detach_SGW_Conditions));
			this._SGW_EntityFields = new EntitySet<SGW_EntityField>(new Action<SGW_EntityField>(this.attach_SGW_EntityFields), new Action<SGW_EntityField>(this.detach_SGW_EntityFields));
			this._SGW_EntityInstances = new EntitySet<SGW_EntityInstance>(new Action<SGW_EntityInstance>(this.attach_SGW_EntityInstances), new Action<SGW_EntityInstance>(this.detach_SGW_EntityInstances));
			this._SGW_EntityStatus = new EntitySet<SGW_EntityStatus>(new Action<SGW_EntityStatus>(this.attach_SGW_EntityStatus), new Action<SGW_EntityStatus>(this.detach_SGW_EntityStatus));
			this._SGW_Workflows = new EntitySet<SGW_Workflow>(new Action<SGW_Workflow>(this.attach_SGW_Workflows), new Action<SGW_Workflow>(this.detach_SGW_Workflows));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="NVarChar(1)")]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQLTableName", DbType="NVarChar(MAX)")]
		public string SQLTableName
		{
			get
			{
				return this._SQLTableName;
			}
			set
			{
				if ((this._SQLTableName != value))
				{
					this.OnSQLTableNameChanging(value);
					this.SendPropertyChanging();
					this._SQLTableName = value;
					this.SendPropertyChanged("SQLTableName");
					this.OnSQLTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFieldName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string StatusFieldName
		{
			get
			{
				return this._StatusFieldName;
			}
			set
			{
				if ((this._StatusFieldName != value))
				{
					this.OnStatusFieldNameChanging(value);
					this.SendPropertyChanging();
					this._StatusFieldName = value;
					this.SendPropertyChanged("StatusFieldName");
					this.OnStatusFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_Condition", Storage="_SGW_Conditions", ThisKey="EntityId", OtherKey="EntityId")]
		public EntitySet<SGW_Condition> SGW_Conditions
		{
			get
			{
				return this._SGW_Conditions;
			}
			set
			{
				this._SGW_Conditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_EntityField", Storage="_SGW_EntityFields", ThisKey="EntityId", OtherKey="EntityId")]
		public EntitySet<SGW_EntityField> SGW_EntityFields
		{
			get
			{
				return this._SGW_EntityFields;
			}
			set
			{
				this._SGW_EntityFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_EntityInstance", Storage="_SGW_EntityInstances", ThisKey="EntityId", OtherKey="EntityId")]
		public EntitySet<SGW_EntityInstance> SGW_EntityInstances
		{
			get
			{
				return this._SGW_EntityInstances;
			}
			set
			{
				this._SGW_EntityInstances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_EntityStatus", Storage="_SGW_EntityStatus", ThisKey="EntityId", OtherKey="EntityId")]
		public EntitySet<SGW_EntityStatus> SGW_EntityStatus
		{
			get
			{
				return this._SGW_EntityStatus;
			}
			set
			{
				this._SGW_EntityStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_Workflow", Storage="_SGW_Workflows", ThisKey="EntityId", OtherKey="EntityId")]
		public EntitySet<SGW_Workflow> SGW_Workflows
		{
			get
			{
				return this._SGW_Workflows;
			}
			set
			{
				this._SGW_Workflows.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_Conditions(SGW_Condition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = this;
		}
		
		private void detach_SGW_Conditions(SGW_Condition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = null;
		}
		
		private void attach_SGW_EntityFields(SGW_EntityField entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = this;
		}
		
		private void detach_SGW_EntityFields(SGW_EntityField entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = null;
		}
		
		private void attach_SGW_EntityInstances(SGW_EntityInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = this;
		}
		
		private void detach_SGW_EntityInstances(SGW_EntityInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = null;
		}
		
		private void attach_SGW_EntityStatus(SGW_EntityStatus entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = this;
		}
		
		private void detach_SGW_EntityStatus(SGW_EntityStatus entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = null;
		}
		
		private void attach_SGW_Workflows(SGW_Workflow entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = this;
		}
		
		private void detach_SGW_Workflows(SGW_Workflow entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Entity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_EntityField")]
	public partial class SGW_EntityField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EntityFieldId;
		
		private System.Guid _EntityId;
		
		private string _Name;
		
		private string _FieldType;
		
		private bool _UserDefined;
		
		private EntityRef<SGW_Entity> _SGW_Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityFieldIdChanging(System.Guid value);
    partial void OnEntityFieldIdChanged();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFieldTypeChanging(string value);
    partial void OnFieldTypeChanged();
    partial void OnUserDefinedChanging(bool value);
    partial void OnUserDefinedChanged();
    #endregion
		
		public SGW_EntityField()
		{
			this._SGW_Entity = default(EntityRef<SGW_Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityFieldId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EntityFieldId
		{
			get
			{
				return this._EntityFieldId;
			}
			set
			{
				if ((this._EntityFieldId != value))
				{
					this.OnEntityFieldIdChanging(value);
					this.SendPropertyChanging();
					this._EntityFieldId = value;
					this.SendPropertyChanged("EntityFieldId");
					this.OnEntityFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					if (this._SGW_Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldType", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string FieldType
		{
			get
			{
				return this._FieldType;
			}
			set
			{
				if ((this._FieldType != value))
				{
					this.OnFieldTypeChanging(value);
					this.SendPropertyChanging();
					this._FieldType = value;
					this.SendPropertyChanged("FieldType");
					this.OnFieldTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDefined", DbType="Bit NOT NULL")]
		public bool UserDefined
		{
			get
			{
				return this._UserDefined;
			}
			set
			{
				if ((this._UserDefined != value))
				{
					this.OnUserDefinedChanging(value);
					this.SendPropertyChanging();
					this._UserDefined = value;
					this.SendPropertyChanged("UserDefined");
					this.OnUserDefinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_EntityField", Storage="_SGW_Entity", ThisKey="EntityId", OtherKey="EntityId", IsForeignKey=true)]
		public SGW_Entity SGW_Entity
		{
			get
			{
				return this._SGW_Entity.Entity;
			}
			set
			{
				SGW_Entity previousValue = this._SGW_Entity.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Entity.Entity = null;
						previousValue.SGW_EntityFields.Remove(this);
					}
					this._SGW_Entity.Entity = value;
					if ((value != null))
					{
						value.SGW_EntityFields.Add(this);
						this._EntityId = value.EntityId;
					}
					else
					{
						this._EntityId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_EntityInstance")]
	public partial class SGW_EntityInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EntityId;
		
		private System.Guid _EntityInstanceId;
		
		private string _DataValue;
		
		private string _CurrentStatus;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_Attachment> _SGW_Attachments;
		
		private EntitySet<SGW_WorkflowInstance> _SGW_WorkflowInstances;
		
		private EntityRef<SGW_Entity> _SGW_Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnEntityInstanceIdChanging(System.Guid value);
    partial void OnEntityInstanceIdChanged();
    partial void OnDataValueChanging(string value);
    partial void OnDataValueChanged();
    partial void OnCurrentStatusChanging(string value);
    partial void OnCurrentStatusChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_EntityInstance()
		{
			this._SGW_Attachments = new EntitySet<SGW_Attachment>(new Action<SGW_Attachment>(this.attach_SGW_Attachments), new Action<SGW_Attachment>(this.detach_SGW_Attachments));
			this._SGW_WorkflowInstances = new EntitySet<SGW_WorkflowInstance>(new Action<SGW_WorkflowInstance>(this.attach_SGW_WorkflowInstances), new Action<SGW_WorkflowInstance>(this.detach_SGW_WorkflowInstances));
			this._SGW_Entity = default(EntityRef<SGW_Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					if (this._SGW_Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityInstanceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EntityInstanceId
		{
			get
			{
				return this._EntityInstanceId;
			}
			set
			{
				if ((this._EntityInstanceId != value))
				{
					this.OnEntityInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._EntityInstanceId = value;
					this.SendPropertyChanged("EntityInstanceId");
					this.OnEntityInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DataValue
		{
			get
			{
				return this._DataValue;
			}
			set
			{
				if ((this._DataValue != value))
				{
					this.OnDataValueChanging(value);
					this.SendPropertyChanging();
					this._DataValue = value;
					this.SendPropertyChanged("DataValue");
					this.OnDataValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStatus", DbType="NVarChar(MAX)")]
		public string CurrentStatus
		{
			get
			{
				return this._CurrentStatus;
			}
			set
			{
				if ((this._CurrentStatus != value))
				{
					this.OnCurrentStatusChanging(value);
					this.SendPropertyChanging();
					this._CurrentStatus = value;
					this.SendPropertyChanged("CurrentStatus");
					this.OnCurrentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_EntityInstance_SGW_Attachment", Storage="_SGW_Attachments", ThisKey="EntityInstanceId", OtherKey="EntityInstanceId")]
		public EntitySet<SGW_Attachment> SGW_Attachments
		{
			get
			{
				return this._SGW_Attachments;
			}
			set
			{
				this._SGW_Attachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_EntityInstance_SGW_WorkflowInstance", Storage="_SGW_WorkflowInstances", ThisKey="EntityInstanceId", OtherKey="EntityInstanceId")]
		public EntitySet<SGW_WorkflowInstance> SGW_WorkflowInstances
		{
			get
			{
				return this._SGW_WorkflowInstances;
			}
			set
			{
				this._SGW_WorkflowInstances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_EntityInstance", Storage="_SGW_Entity", ThisKey="EntityId", OtherKey="EntityId", IsForeignKey=true)]
		public SGW_Entity SGW_Entity
		{
			get
			{
				return this._SGW_Entity.Entity;
			}
			set
			{
				SGW_Entity previousValue = this._SGW_Entity.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Entity.Entity = null;
						previousValue.SGW_EntityInstances.Remove(this);
					}
					this._SGW_Entity.Entity = value;
					if ((value != null))
					{
						value.SGW_EntityInstances.Add(this);
						this._EntityId = value.EntityId;
					}
					else
					{
						this._EntityId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_Attachments(SGW_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.SGW_EntityInstance = this;
		}
		
		private void detach_SGW_Attachments(SGW_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.SGW_EntityInstance = null;
		}
		
		private void attach_SGW_WorkflowInstances(SGW_WorkflowInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_EntityInstance = this;
		}
		
		private void detach_SGW_WorkflowInstances(SGW_WorkflowInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_EntityInstance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_EntityStatus")]
	public partial class SGW_EntityStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EntityStatusId;
		
		private System.Guid _EntityId;
		
		private string _Name;
		
		private string _UserDefinedCode;
		
		private EntitySet<SGW_WorkflowState> _SGW_WorkflowStates;
		
		private EntityRef<SGW_Entity> _SGW_Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityStatusIdChanging(System.Guid value);
    partial void OnEntityStatusIdChanged();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserDefinedCodeChanging(string value);
    partial void OnUserDefinedCodeChanged();
    #endregion
		
		public SGW_EntityStatus()
		{
			this._SGW_WorkflowStates = new EntitySet<SGW_WorkflowState>(new Action<SGW_WorkflowState>(this.attach_SGW_WorkflowStates), new Action<SGW_WorkflowState>(this.detach_SGW_WorkflowStates));
			this._SGW_Entity = default(EntityRef<SGW_Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityStatusId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EntityStatusId
		{
			get
			{
				return this._EntityStatusId;
			}
			set
			{
				if ((this._EntityStatusId != value))
				{
					this.OnEntityStatusIdChanging(value);
					this.SendPropertyChanging();
					this._EntityStatusId = value;
					this.SendPropertyChanged("EntityStatusId");
					this.OnEntityStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					if (this._SGW_Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDefinedCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserDefinedCode
		{
			get
			{
				return this._UserDefinedCode;
			}
			set
			{
				if ((this._UserDefinedCode != value))
				{
					this.OnUserDefinedCodeChanging(value);
					this.SendPropertyChanging();
					this._UserDefinedCode = value;
					this.SendPropertyChanged("UserDefinedCode");
					this.OnUserDefinedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_EntityStatus_SGW_WorkflowState", Storage="_SGW_WorkflowStates", ThisKey="EntityStatusId", OtherKey="EntityStatusId")]
		public EntitySet<SGW_WorkflowState> SGW_WorkflowStates
		{
			get
			{
				return this._SGW_WorkflowStates;
			}
			set
			{
				this._SGW_WorkflowStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_EntityStatus", Storage="_SGW_Entity", ThisKey="EntityId", OtherKey="EntityId", IsForeignKey=true)]
		public SGW_Entity SGW_Entity
		{
			get
			{
				return this._SGW_Entity.Entity;
			}
			set
			{
				SGW_Entity previousValue = this._SGW_Entity.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Entity.Entity = null;
						previousValue.SGW_EntityStatus.Remove(this);
					}
					this._SGW_Entity.Entity = value;
					if ((value != null))
					{
						value.SGW_EntityStatus.Add(this);
						this._EntityId = value.EntityId;
					}
					else
					{
						this._EntityId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkflowStates(SGW_WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.SGW_EntityStatus = this;
		}
		
		private void detach_SGW_WorkflowStates(SGW_WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.SGW_EntityStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Resource")]
	public partial class SGW_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ResourceId;
		
		private string _Name;
		
		private string _EmailAddress;
		
		private string _LoginPassword;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_WorkgroupMember> _SGW_WorkgroupMembers;
		
		private EntitySet<SGW_RoleMember> _SGW_RoleMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIdChanging(System.Guid value);
    partial void OnResourceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_Resource()
		{
			this._SGW_WorkgroupMembers = new EntitySet<SGW_WorkgroupMember>(new Action<SGW_WorkgroupMember>(this.attach_SGW_WorkgroupMembers), new Action<SGW_WorkgroupMember>(this.detach_SGW_WorkgroupMembers));
			this._SGW_RoleMembers = new EntitySet<SGW_RoleMember>(new Action<SGW_RoleMember>(this.attach_SGW_RoleMembers), new Action<SGW_RoleMember>(this.detach_SGW_RoleMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Resource_SGW_WorkgroupMember", Storage="_SGW_WorkgroupMembers", ThisKey="ResourceId", OtherKey="ResourceId")]
		public EntitySet<SGW_WorkgroupMember> SGW_WorkgroupMembers
		{
			get
			{
				return this._SGW_WorkgroupMembers;
			}
			set
			{
				this._SGW_WorkgroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Resource_SGW_RoleMember", Storage="_SGW_RoleMembers", ThisKey="ResourceId", OtherKey="ResourceId")]
		public EntitySet<SGW_RoleMember> SGW_RoleMembers
		{
			get
			{
				return this._SGW_RoleMembers;
			}
			set
			{
				this._SGW_RoleMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkgroupMembers(SGW_WorkgroupMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Resource = this;
		}
		
		private void detach_SGW_WorkgroupMembers(SGW_WorkgroupMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Resource = null;
		}
		
		private void attach_SGW_RoleMembers(SGW_RoleMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Resource = this;
		}
		
		private void detach_SGW_RoleMembers(SGW_RoleMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Role")]
	public partial class SGW_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RoleId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_RoleMember> _SGW_RoleMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_Role()
		{
			this._SGW_RoleMembers = new EntitySet<SGW_RoleMember>(new Action<SGW_RoleMember>(this.attach_SGW_RoleMembers), new Action<SGW_RoleMember>(this.detach_SGW_RoleMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Role_SGW_RoleMember", Storage="_SGW_RoleMembers", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<SGW_RoleMember> SGW_RoleMembers
		{
			get
			{
				return this._SGW_RoleMembers;
			}
			set
			{
				this._SGW_RoleMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_RoleMembers(SGW_RoleMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Role = this;
		}
		
		private void detach_SGW_RoleMembers(SGW_RoleMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_RoleMember")]
	public partial class SGW_RoleMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ResourceId;
		
		private System.Guid _RoleId;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private EntityRef<SGW_Resource> _SGW_Resource;
		
		private EntityRef<SGW_Role> _SGW_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIdChanging(System.Guid value);
    partial void OnResourceIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public SGW_RoleMember()
		{
			this._SGW_Resource = default(EntityRef<SGW_Resource>);
			this._SGW_Role = default(EntityRef<SGW_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this._SGW_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SGW_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Resource_SGW_RoleMember", Storage="_SGW_Resource", ThisKey="ResourceId", OtherKey="ResourceId", IsForeignKey=true)]
		public SGW_Resource SGW_Resource
		{
			get
			{
				return this._SGW_Resource.Entity;
			}
			set
			{
				SGW_Resource previousValue = this._SGW_Resource.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Resource.Entity = null;
						previousValue.SGW_RoleMembers.Remove(this);
					}
					this._SGW_Resource.Entity = value;
					if ((value != null))
					{
						value.SGW_RoleMembers.Add(this);
						this._ResourceId = value.ResourceId;
					}
					else
					{
						this._ResourceId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Role_SGW_RoleMember", Storage="_SGW_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public SGW_Role SGW_Role
		{
			get
			{
				return this._SGW_Role.Entity;
			}
			set
			{
				SGW_Role previousValue = this._SGW_Role.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Role.Entity = null;
						previousValue.SGW_RoleMembers.Remove(this);
					}
					this._SGW_Role.Entity = value;
					if ((value != null))
					{
						value.SGW_RoleMembers.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_StepType")]
	public partial class SGW_StepType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StepTypeId;
		
		private string _Name;
		
		private string _CommandType;
		
		private string _StepCommand;
		
		private string _CommandFile;
		
		private bool _SystemDefined;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private EntitySet<SGW_WorkflowStep> _SGW_WorkflowSteps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStepTypeIdChanging(System.Guid value);
    partial void OnStepTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommandTypeChanging(string value);
    partial void OnCommandTypeChanged();
    partial void OnStepCommandChanging(string value);
    partial void OnStepCommandChanged();
    partial void OnCommandFileChanging(string value);
    partial void OnCommandFileChanged();
    partial void OnSystemDefinedChanging(bool value);
    partial void OnSystemDefinedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public SGW_StepType()
		{
			this._SGW_WorkflowSteps = new EntitySet<SGW_WorkflowStep>(new Action<SGW_WorkflowStep>(this.attach_SGW_WorkflowSteps), new Action<SGW_WorkflowStep>(this.detach_SGW_WorkflowSteps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StepTypeId
		{
			get
			{
				return this._StepTypeId;
			}
			set
			{
				if ((this._StepTypeId != value))
				{
					this.OnStepTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StepTypeId = value;
					this.SendPropertyChanged("StepTypeId");
					this.OnStepTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandType", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CommandType
		{
			get
			{
				return this._CommandType;
			}
			set
			{
				if ((this._CommandType != value))
				{
					this.OnCommandTypeChanging(value);
					this.SendPropertyChanging();
					this._CommandType = value;
					this.SendPropertyChanged("CommandType");
					this.OnCommandTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepCommand", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StepCommand
		{
			get
			{
				return this._StepCommand;
			}
			set
			{
				if ((this._StepCommand != value))
				{
					this.OnStepCommandChanging(value);
					this.SendPropertyChanging();
					this._StepCommand = value;
					this.SendPropertyChanged("StepCommand");
					this.OnStepCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandFile", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CommandFile
		{
			get
			{
				return this._CommandFile;
			}
			set
			{
				if ((this._CommandFile != value))
				{
					this.OnCommandFileChanging(value);
					this.SendPropertyChanging();
					this._CommandFile = value;
					this.SendPropertyChanged("CommandFile");
					this.OnCommandFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemDefined", DbType="Bit NOT NULL")]
		public bool SystemDefined
		{
			get
			{
				return this._SystemDefined;
			}
			set
			{
				if ((this._SystemDefined != value))
				{
					this.OnSystemDefinedChanging(value);
					this.SendPropertyChanging();
					this._SystemDefined = value;
					this.SendPropertyChanged("SystemDefined");
					this.OnSystemDefinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_StepType_SGW_WorkflowStep", Storage="_SGW_WorkflowSteps", ThisKey="StepTypeId", OtherKey="StepTypeId")]
		public EntitySet<SGW_WorkflowStep> SGW_WorkflowSteps
		{
			get
			{
				return this._SGW_WorkflowSteps;
			}
			set
			{
				this._SGW_WorkflowSteps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_StepType = this;
		}
		
		private void detach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_StepType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Workflow")]
	public partial class SGW_Workflow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowId;
		
		private string _Name;
		
		private bool _Active;
		
		private System.Guid _TriggerConditionId;
		
		private System.Guid _EntityId;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_WorkflowInstance> _SGW_WorkflowInstances;
		
		private EntitySet<SGW_WorkflowState> _SGW_WorkflowStates;
		
		private EntitySet<SGW_WorkflowStateTransition> _SGW_WorkflowStateTransitions;
		
		private EntitySet<SGW_WorkflowStep> _SGW_WorkflowSteps;
		
		private EntitySet<SGW_WorkflowStepTransition> _SGW_WorkflowStepTransitions;
		
		private EntityRef<SGW_Entity> _SGW_Entity;
		
		private EntityRef<SGW_Condition> _SGW_Condition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnTriggerConditionIdChanging(System.Guid value);
    partial void OnTriggerConditionIdChanged();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_Workflow()
		{
			this._SGW_WorkflowInstances = new EntitySet<SGW_WorkflowInstance>(new Action<SGW_WorkflowInstance>(this.attach_SGW_WorkflowInstances), new Action<SGW_WorkflowInstance>(this.detach_SGW_WorkflowInstances));
			this._SGW_WorkflowStates = new EntitySet<SGW_WorkflowState>(new Action<SGW_WorkflowState>(this.attach_SGW_WorkflowStates), new Action<SGW_WorkflowState>(this.detach_SGW_WorkflowStates));
			this._SGW_WorkflowStateTransitions = new EntitySet<SGW_WorkflowStateTransition>(new Action<SGW_WorkflowStateTransition>(this.attach_SGW_WorkflowStateTransitions), new Action<SGW_WorkflowStateTransition>(this.detach_SGW_WorkflowStateTransitions));
			this._SGW_WorkflowSteps = new EntitySet<SGW_WorkflowStep>(new Action<SGW_WorkflowStep>(this.attach_SGW_WorkflowSteps), new Action<SGW_WorkflowStep>(this.detach_SGW_WorkflowSteps));
			this._SGW_WorkflowStepTransitions = new EntitySet<SGW_WorkflowStepTransition>(new Action<SGW_WorkflowStepTransition>(this.attach_SGW_WorkflowStepTransitions), new Action<SGW_WorkflowStepTransition>(this.detach_SGW_WorkflowStepTransitions));
			this._SGW_Entity = default(EntityRef<SGW_Entity>);
			this._SGW_Condition = default(EntityRef<SGW_Condition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerConditionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TriggerConditionId
		{
			get
			{
				return this._TriggerConditionId;
			}
			set
			{
				if ((this._TriggerConditionId != value))
				{
					if (this._SGW_Condition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTriggerConditionIdChanging(value);
					this.SendPropertyChanging();
					this._TriggerConditionId = value;
					this.SendPropertyChanged("TriggerConditionId");
					this.OnTriggerConditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					if (this._SGW_Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowInstance", Storage="_SGW_WorkflowInstances", ThisKey="WorkflowId", OtherKey="WorkflowId")]
		public EntitySet<SGW_WorkflowInstance> SGW_WorkflowInstances
		{
			get
			{
				return this._SGW_WorkflowInstances;
			}
			set
			{
				this._SGW_WorkflowInstances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowState", Storage="_SGW_WorkflowStates", ThisKey="WorkflowId", OtherKey="WorkflowId")]
		public EntitySet<SGW_WorkflowState> SGW_WorkflowStates
		{
			get
			{
				return this._SGW_WorkflowStates;
			}
			set
			{
				this._SGW_WorkflowStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowStateTransition", Storage="_SGW_WorkflowStateTransitions", ThisKey="WorkflowId", OtherKey="WorkflowId")]
		public EntitySet<SGW_WorkflowStateTransition> SGW_WorkflowStateTransitions
		{
			get
			{
				return this._SGW_WorkflowStateTransitions;
			}
			set
			{
				this._SGW_WorkflowStateTransitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowStep", Storage="_SGW_WorkflowSteps", ThisKey="WorkflowId", OtherKey="WorkflowId")]
		public EntitySet<SGW_WorkflowStep> SGW_WorkflowSteps
		{
			get
			{
				return this._SGW_WorkflowSteps;
			}
			set
			{
				this._SGW_WorkflowSteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowStepTransition", Storage="_SGW_WorkflowStepTransitions", ThisKey="WorkflowId", OtherKey="WorkflowId")]
		public EntitySet<SGW_WorkflowStepTransition> SGW_WorkflowStepTransitions
		{
			get
			{
				return this._SGW_WorkflowStepTransitions;
			}
			set
			{
				this._SGW_WorkflowStepTransitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Entity_SGW_Workflow", Storage="_SGW_Entity", ThisKey="EntityId", OtherKey="EntityId", IsForeignKey=true)]
		public SGW_Entity SGW_Entity
		{
			get
			{
				return this._SGW_Entity.Entity;
			}
			set
			{
				SGW_Entity previousValue = this._SGW_Entity.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Entity.Entity = null;
						previousValue.SGW_Workflows.Remove(this);
					}
					this._SGW_Entity.Entity = value;
					if ((value != null))
					{
						value.SGW_Workflows.Add(this);
						this._EntityId = value.EntityId;
					}
					else
					{
						this._EntityId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Entity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Condition_SGW_Workflow", Storage="_SGW_Condition", ThisKey="TriggerConditionId", OtherKey="ConditionId", IsForeignKey=true)]
		public SGW_Condition SGW_Condition
		{
			get
			{
				return this._SGW_Condition.Entity;
			}
			set
			{
				SGW_Condition previousValue = this._SGW_Condition.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Condition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Condition.Entity = null;
						previousValue.SGW_Workflows.Remove(this);
					}
					this._SGW_Condition.Entity = value;
					if ((value != null))
					{
						value.SGW_Workflows.Add(this);
						this._TriggerConditionId = value.ConditionId;
					}
					else
					{
						this._TriggerConditionId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Condition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkflowInstances(SGW_WorkflowInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = this;
		}
		
		private void detach_SGW_WorkflowInstances(SGW_WorkflowInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = null;
		}
		
		private void attach_SGW_WorkflowStates(SGW_WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = this;
		}
		
		private void detach_SGW_WorkflowStates(SGW_WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = null;
		}
		
		private void attach_SGW_WorkflowStateTransitions(SGW_WorkflowStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = this;
		}
		
		private void detach_SGW_WorkflowStateTransitions(SGW_WorkflowStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = null;
		}
		
		private void attach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = this;
		}
		
		private void detach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = null;
		}
		
		private void attach_SGW_WorkflowStepTransitions(SGW_WorkflowStepTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = this;
		}
		
		private void detach_SGW_WorkflowStepTransitions(SGW_WorkflowStepTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workflow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowInstance")]
	public partial class SGW_WorkflowInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowInstanceId;
		
		private System.Guid _WorkflowId;
		
		private System.Guid _StepId;
		
		private System.Guid _EntityInstanceId;
		
		private System.Nullable<System.Guid> _CompletedBy;
		
		private bool _Completed;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_WorkflowInstanceAssignment> _SGW_WorkflowInstanceAssignments;
		
		private EntityRef<SGW_EntityInstance> _SGW_EntityInstance;
		
		private EntityRef<SGW_Workflow> _SGW_Workflow;
		
		private EntityRef<SGW_WorkflowStep> _SGW_WorkflowStep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowInstanceIdChanging(System.Guid value);
    partial void OnWorkflowInstanceIdChanged();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnStepIdChanging(System.Guid value);
    partial void OnStepIdChanged();
    partial void OnEntityInstanceIdChanging(System.Guid value);
    partial void OnEntityInstanceIdChanged();
    partial void OnCompletedByChanging(System.Nullable<System.Guid> value);
    partial void OnCompletedByChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_WorkflowInstance()
		{
			this._SGW_WorkflowInstanceAssignments = new EntitySet<SGW_WorkflowInstanceAssignment>(new Action<SGW_WorkflowInstanceAssignment>(this.attach_SGW_WorkflowInstanceAssignments), new Action<SGW_WorkflowInstanceAssignment>(this.detach_SGW_WorkflowInstanceAssignments));
			this._SGW_EntityInstance = default(EntityRef<SGW_EntityInstance>);
			this._SGW_Workflow = default(EntityRef<SGW_Workflow>);
			this._SGW_WorkflowStep = default(EntityRef<SGW_WorkflowStep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowInstanceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WorkflowInstanceId
		{
			get
			{
				return this._WorkflowInstanceId;
			}
			set
			{
				if ((this._WorkflowInstanceId != value))
				{
					this.OnWorkflowInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowInstanceId = value;
					this.SendPropertyChanged("WorkflowInstanceId");
					this.OnWorkflowInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					if (this._SGW_Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StepId
		{
			get
			{
				return this._StepId;
			}
			set
			{
				if ((this._StepId != value))
				{
					if (this._SGW_WorkflowStep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStepIdChanging(value);
					this.SendPropertyChanging();
					this._StepId = value;
					this.SendPropertyChanged("StepId");
					this.OnStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityInstanceId
		{
			get
			{
				return this._EntityInstanceId;
			}
			set
			{
				if ((this._EntityInstanceId != value))
				{
					if (this._SGW_EntityInstance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._EntityInstanceId = value;
					this.SendPropertyChanged("EntityInstanceId");
					this.OnEntityInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompletedBy
		{
			get
			{
				return this._CompletedBy;
			}
			set
			{
				if ((this._CompletedBy != value))
				{
					this.OnCompletedByChanging(value);
					this.SendPropertyChanging();
					this._CompletedBy = value;
					this.SendPropertyChanged("CompletedBy");
					this.OnCompletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowInstance_SGW_WorkflowInstanceAssignment", Storage="_SGW_WorkflowInstanceAssignments", ThisKey="WorkflowInstanceId", OtherKey="WorkflowInstanceId")]
		public EntitySet<SGW_WorkflowInstanceAssignment> SGW_WorkflowInstanceAssignments
		{
			get
			{
				return this._SGW_WorkflowInstanceAssignments;
			}
			set
			{
				this._SGW_WorkflowInstanceAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_EntityInstance_SGW_WorkflowInstance", Storage="_SGW_EntityInstance", ThisKey="EntityInstanceId", OtherKey="EntityInstanceId", IsForeignKey=true)]
		public SGW_EntityInstance SGW_EntityInstance
		{
			get
			{
				return this._SGW_EntityInstance.Entity;
			}
			set
			{
				SGW_EntityInstance previousValue = this._SGW_EntityInstance.Entity;
				if (((previousValue != value) 
							|| (this._SGW_EntityInstance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_EntityInstance.Entity = null;
						previousValue.SGW_WorkflowInstances.Remove(this);
					}
					this._SGW_EntityInstance.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowInstances.Add(this);
						this._EntityInstanceId = value.EntityInstanceId;
					}
					else
					{
						this._EntityInstanceId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_EntityInstance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowInstance", Storage="_SGW_Workflow", ThisKey="WorkflowId", OtherKey="WorkflowId", IsForeignKey=true)]
		public SGW_Workflow SGW_Workflow
		{
			get
			{
				return this._SGW_Workflow.Entity;
			}
			set
			{
				SGW_Workflow previousValue = this._SGW_Workflow.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Workflow.Entity = null;
						previousValue.SGW_WorkflowInstances.Remove(this);
					}
					this._SGW_Workflow.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowInstances.Add(this);
						this._WorkflowId = value.WorkflowId;
					}
					else
					{
						this._WorkflowId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Workflow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_WorkflowInstance", Storage="_SGW_WorkflowStep", ThisKey="StepId", OtherKey="StepId", IsForeignKey=true)]
		public SGW_WorkflowStep SGW_WorkflowStep
		{
			get
			{
				return this._SGW_WorkflowStep.Entity;
			}
			set
			{
				SGW_WorkflowStep previousValue = this._SGW_WorkflowStep.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowStep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowStep.Entity = null;
						previousValue.SGW_WorkflowInstances.Remove(this);
					}
					this._SGW_WorkflowStep.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowInstances.Add(this);
						this._StepId = value.StepId;
					}
					else
					{
						this._StepId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowStep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkflowInstanceAssignments(SGW_WorkflowInstanceAssignment entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowInstance = this;
		}
		
		private void detach_SGW_WorkflowInstanceAssignments(SGW_WorkflowInstanceAssignment entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowInstance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowInstanceAssignment")]
	public partial class SGW_WorkflowInstanceAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowInstanceAssignmentId;
		
		private System.Guid _WorkflowInstanceId;
		
		private System.Guid _ParticipantId;
		
		private string _Entity;
		
		private bool _Mandatory;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private EntityRef<SGW_WorkflowInstance> _SGW_WorkflowInstance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowInstanceAssignmentIdChanging(System.Guid value);
    partial void OnWorkflowInstanceAssignmentIdChanged();
    partial void OnWorkflowInstanceIdChanging(System.Guid value);
    partial void OnWorkflowInstanceIdChanged();
    partial void OnParticipantIdChanging(System.Guid value);
    partial void OnParticipantIdChanged();
    partial void OnEntityChanging(string value);
    partial void OnEntityChanged();
    partial void OnMandatoryChanging(bool value);
    partial void OnMandatoryChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public SGW_WorkflowInstanceAssignment()
		{
			this._SGW_WorkflowInstance = default(EntityRef<SGW_WorkflowInstance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowInstanceAssignmentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WorkflowInstanceAssignmentId
		{
			get
			{
				return this._WorkflowInstanceAssignmentId;
			}
			set
			{
				if ((this._WorkflowInstanceAssignmentId != value))
				{
					this.OnWorkflowInstanceAssignmentIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowInstanceAssignmentId = value;
					this.SendPropertyChanged("WorkflowInstanceAssignmentId");
					this.OnWorkflowInstanceAssignmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowInstanceId
		{
			get
			{
				return this._WorkflowInstanceId;
			}
			set
			{
				if ((this._WorkflowInstanceId != value))
				{
					if (this._SGW_WorkflowInstance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowInstanceId = value;
					this.SendPropertyChanged("WorkflowInstanceId");
					this.OnWorkflowInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Entity
		{
			get
			{
				return this._Entity;
			}
			set
			{
				if ((this._Entity != value))
				{
					this.OnEntityChanging(value);
					this.SendPropertyChanging();
					this._Entity = value;
					this.SendPropertyChanged("Entity");
					this.OnEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="Bit NOT NULL")]
		public bool Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowInstance_SGW_WorkflowInstanceAssignment", Storage="_SGW_WorkflowInstance", ThisKey="WorkflowInstanceId", OtherKey="WorkflowInstanceId", IsForeignKey=true)]
		public SGW_WorkflowInstance SGW_WorkflowInstance
		{
			get
			{
				return this._SGW_WorkflowInstance.Entity;
			}
			set
			{
				SGW_WorkflowInstance previousValue = this._SGW_WorkflowInstance.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowInstance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowInstance.Entity = null;
						previousValue.SGW_WorkflowInstanceAssignments.Remove(this);
					}
					this._SGW_WorkflowInstance.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowInstanceAssignments.Add(this);
						this._WorkflowInstanceId = value.WorkflowInstanceId;
					}
					else
					{
						this._WorkflowInstanceId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowInstance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowParticipant")]
	public partial class SGW_WorkflowParticipant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParticipantId;
		
		private string _Name;
		
		private bool _HasResources;
		
		private bool _HasWorkgroups;
		
		private bool _HasRoles;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_Access> _SGW_Accesses;
		
		private EntitySet<SGW_WorkflowParticipantMember> _SGW_WorkflowParticipantMembers;
		
		private EntitySet<SGW_WorkflowStep> _SGW_WorkflowSteps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParticipantIdChanging(System.Guid value);
    partial void OnParticipantIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasResourcesChanging(bool value);
    partial void OnHasResourcesChanged();
    partial void OnHasWorkgroupsChanging(bool value);
    partial void OnHasWorkgroupsChanged();
    partial void OnHasRolesChanging(bool value);
    partial void OnHasRolesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_WorkflowParticipant()
		{
			this._SGW_Accesses = new EntitySet<SGW_Access>(new Action<SGW_Access>(this.attach_SGW_Accesses), new Action<SGW_Access>(this.detach_SGW_Accesses));
			this._SGW_WorkflowParticipantMembers = new EntitySet<SGW_WorkflowParticipantMember>(new Action<SGW_WorkflowParticipantMember>(this.attach_SGW_WorkflowParticipantMembers), new Action<SGW_WorkflowParticipantMember>(this.detach_SGW_WorkflowParticipantMembers));
			this._SGW_WorkflowSteps = new EntitySet<SGW_WorkflowStep>(new Action<SGW_WorkflowStep>(this.attach_SGW_WorkflowSteps), new Action<SGW_WorkflowStep>(this.detach_SGW_WorkflowSteps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasResources", DbType="Bit NOT NULL")]
		public bool HasResources
		{
			get
			{
				return this._HasResources;
			}
			set
			{
				if ((this._HasResources != value))
				{
					this.OnHasResourcesChanging(value);
					this.SendPropertyChanging();
					this._HasResources = value;
					this.SendPropertyChanged("HasResources");
					this.OnHasResourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasWorkgroups", DbType="Bit NOT NULL")]
		public bool HasWorkgroups
		{
			get
			{
				return this._HasWorkgroups;
			}
			set
			{
				if ((this._HasWorkgroups != value))
				{
					this.OnHasWorkgroupsChanging(value);
					this.SendPropertyChanging();
					this._HasWorkgroups = value;
					this.SendPropertyChanged("HasWorkgroups");
					this.OnHasWorkgroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRoles", DbType="Bit NOT NULL")]
		public bool HasRoles
		{
			get
			{
				return this._HasRoles;
			}
			set
			{
				if ((this._HasRoles != value))
				{
					this.OnHasRolesChanging(value);
					this.SendPropertyChanging();
					this._HasRoles = value;
					this.SendPropertyChanged("HasRoles");
					this.OnHasRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowParticipant_SGW_Access", Storage="_SGW_Accesses", ThisKey="ParticipantId", OtherKey="ParticipantId")]
		public EntitySet<SGW_Access> SGW_Accesses
		{
			get
			{
				return this._SGW_Accesses;
			}
			set
			{
				this._SGW_Accesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowParticipant_SGW_WorkflowParticipantMember", Storage="_SGW_WorkflowParticipantMembers", ThisKey="ParticipantId", OtherKey="ParticipantId")]
		public EntitySet<SGW_WorkflowParticipantMember> SGW_WorkflowParticipantMembers
		{
			get
			{
				return this._SGW_WorkflowParticipantMembers;
			}
			set
			{
				this._SGW_WorkflowParticipantMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowParticipant_SGW_WorkflowStep", Storage="_SGW_WorkflowSteps", ThisKey="ParticipantId", OtherKey="ParticipantId")]
		public EntitySet<SGW_WorkflowStep> SGW_WorkflowSteps
		{
			get
			{
				return this._SGW_WorkflowSteps;
			}
			set
			{
				this._SGW_WorkflowSteps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_Accesses(SGW_Access entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowParticipant = this;
		}
		
		private void detach_SGW_Accesses(SGW_Access entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowParticipant = null;
		}
		
		private void attach_SGW_WorkflowParticipantMembers(SGW_WorkflowParticipantMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowParticipant = this;
		}
		
		private void detach_SGW_WorkflowParticipantMembers(SGW_WorkflowParticipantMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowParticipant = null;
		}
		
		private void attach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowParticipant = this;
		}
		
		private void detach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowParticipant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowParticipantMember")]
	public partial class SGW_WorkflowParticipantMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParticipantMemberId;
		
		private System.Guid _ParticipantId;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ResourceId;
		
		private System.Nullable<System.Guid> _WorkgroupId;
		
		private System.Nullable<System.Guid> _RoleId;
		
		private EntityRef<SGW_WorkflowParticipant> _SGW_WorkflowParticipant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParticipantMemberIdChanging(System.Guid value);
    partial void OnParticipantMemberIdChanged();
    partial void OnParticipantIdChanging(System.Guid value);
    partial void OnParticipantIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnResourceIdChanging(System.Nullable<System.Guid> value);
    partial void OnResourceIdChanged();
    partial void OnWorkgroupIdChanging(System.Nullable<System.Guid> value);
    partial void OnWorkgroupIdChanged();
    partial void OnRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnRoleIdChanged();
    #endregion
		
		public SGW_WorkflowParticipantMember()
		{
			this._SGW_WorkflowParticipant = default(EntityRef<SGW_WorkflowParticipant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantMemberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ParticipantMemberId
		{
			get
			{
				return this._ParticipantMemberId;
			}
			set
			{
				if ((this._ParticipantMemberId != value))
				{
					this.OnParticipantMemberIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantMemberId = value;
					this.SendPropertyChanged("ParticipantMemberId");
					this.OnParticipantMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					if (this._SGW_WorkflowParticipant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkgroupId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WorkgroupId
		{
			get
			{
				return this._WorkgroupId;
			}
			set
			{
				if ((this._WorkgroupId != value))
				{
					this.OnWorkgroupIdChanging(value);
					this.SendPropertyChanging();
					this._WorkgroupId = value;
					this.SendPropertyChanged("WorkgroupId");
					this.OnWorkgroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowParticipant_SGW_WorkflowParticipantMember", Storage="_SGW_WorkflowParticipant", ThisKey="ParticipantId", OtherKey="ParticipantId", IsForeignKey=true)]
		public SGW_WorkflowParticipant SGW_WorkflowParticipant
		{
			get
			{
				return this._SGW_WorkflowParticipant.Entity;
			}
			set
			{
				SGW_WorkflowParticipant previousValue = this._SGW_WorkflowParticipant.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowParticipant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowParticipant.Entity = null;
						previousValue.SGW_WorkflowParticipantMembers.Remove(this);
					}
					this._SGW_WorkflowParticipant.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowParticipantMembers.Add(this);
						this._ParticipantId = value.ParticipantId;
					}
					else
					{
						this._ParticipantId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowParticipant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowState")]
	public partial class SGW_WorkflowState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowId;
		
		private System.Guid _StateId;
		
		private string _Name;
		
		private bool _InitialState;
		
		private System.Guid _EntityStatusId;
		
		private int _UILeftPosition;
		
		private int _UITopPosition;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_WorkflowStateTransition> _SGW_WorkflowStateTransitions;
		
		private EntitySet<SGW_WorkflowStateTransition> _SGW_WorkflowStateTransitions1;
		
		private EntitySet<SGW_WorkflowStep> _SGW_WorkflowSteps;
		
		private EntityRef<SGW_EntityStatus> _SGW_EntityStatus;
		
		private EntityRef<SGW_Workflow> _SGW_Workflow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnStateIdChanging(System.Guid value);
    partial void OnStateIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInitialStateChanging(bool value);
    partial void OnInitialStateChanged();
    partial void OnEntityStatusIdChanging(System.Guid value);
    partial void OnEntityStatusIdChanged();
    partial void OnUILeftPositionChanging(int value);
    partial void OnUILeftPositionChanged();
    partial void OnUITopPositionChanging(int value);
    partial void OnUITopPositionChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_WorkflowState()
		{
			this._SGW_WorkflowStateTransitions = new EntitySet<SGW_WorkflowStateTransition>(new Action<SGW_WorkflowStateTransition>(this.attach_SGW_WorkflowStateTransitions), new Action<SGW_WorkflowStateTransition>(this.detach_SGW_WorkflowStateTransitions));
			this._SGW_WorkflowStateTransitions1 = new EntitySet<SGW_WorkflowStateTransition>(new Action<SGW_WorkflowStateTransition>(this.attach_SGW_WorkflowStateTransitions1), new Action<SGW_WorkflowStateTransition>(this.detach_SGW_WorkflowStateTransitions1));
			this._SGW_WorkflowSteps = new EntitySet<SGW_WorkflowStep>(new Action<SGW_WorkflowStep>(this.attach_SGW_WorkflowSteps), new Action<SGW_WorkflowStep>(this.detach_SGW_WorkflowSteps));
			this._SGW_EntityStatus = default(EntityRef<SGW_EntityStatus>);
			this._SGW_Workflow = default(EntityRef<SGW_Workflow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					if (this._SGW_Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialState", DbType="Bit NOT NULL")]
		public bool InitialState
		{
			get
			{
				return this._InitialState;
			}
			set
			{
				if ((this._InitialState != value))
				{
					this.OnInitialStateChanging(value);
					this.SendPropertyChanging();
					this._InitialState = value;
					this.SendPropertyChanged("InitialState");
					this.OnInitialStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityStatusId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityStatusId
		{
			get
			{
				return this._EntityStatusId;
			}
			set
			{
				if ((this._EntityStatusId != value))
				{
					if (this._SGW_EntityStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityStatusIdChanging(value);
					this.SendPropertyChanging();
					this._EntityStatusId = value;
					this.SendPropertyChanged("EntityStatusId");
					this.OnEntityStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UILeftPosition", DbType="Int NOT NULL")]
		public int UILeftPosition
		{
			get
			{
				return this._UILeftPosition;
			}
			set
			{
				if ((this._UILeftPosition != value))
				{
					this.OnUILeftPositionChanging(value);
					this.SendPropertyChanging();
					this._UILeftPosition = value;
					this.SendPropertyChanged("UILeftPosition");
					this.OnUILeftPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UITopPosition", DbType="Int NOT NULL")]
		public int UITopPosition
		{
			get
			{
				return this._UITopPosition;
			}
			set
			{
				if ((this._UITopPosition != value))
				{
					this.OnUITopPositionChanging(value);
					this.SendPropertyChanging();
					this._UITopPosition = value;
					this.SendPropertyChanged("UITopPosition");
					this.OnUITopPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowState_SGW_WorkflowStateTransition", Storage="_SGW_WorkflowStateTransitions", ThisKey="StateId", OtherKey="FromStateId")]
		public EntitySet<SGW_WorkflowStateTransition> SGW_WorkflowStateTransitions
		{
			get
			{
				return this._SGW_WorkflowStateTransitions;
			}
			set
			{
				this._SGW_WorkflowStateTransitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowState_SGW_WorkflowStateTransition1", Storage="_SGW_WorkflowStateTransitions1", ThisKey="StateId", OtherKey="ToStateId")]
		public EntitySet<SGW_WorkflowStateTransition> SGW_WorkflowStateTransitions1
		{
			get
			{
				return this._SGW_WorkflowStateTransitions1;
			}
			set
			{
				this._SGW_WorkflowStateTransitions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowState_SGW_WorkflowStep", Storage="_SGW_WorkflowSteps", ThisKey="StateId", OtherKey="FromStateId")]
		public EntitySet<SGW_WorkflowStep> SGW_WorkflowSteps
		{
			get
			{
				return this._SGW_WorkflowSteps;
			}
			set
			{
				this._SGW_WorkflowSteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_EntityStatus_SGW_WorkflowState", Storage="_SGW_EntityStatus", ThisKey="EntityStatusId", OtherKey="EntityStatusId", IsForeignKey=true)]
		public SGW_EntityStatus SGW_EntityStatus
		{
			get
			{
				return this._SGW_EntityStatus.Entity;
			}
			set
			{
				SGW_EntityStatus previousValue = this._SGW_EntityStatus.Entity;
				if (((previousValue != value) 
							|| (this._SGW_EntityStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_EntityStatus.Entity = null;
						previousValue.SGW_WorkflowStates.Remove(this);
					}
					this._SGW_EntityStatus.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStates.Add(this);
						this._EntityStatusId = value.EntityStatusId;
					}
					else
					{
						this._EntityStatusId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_EntityStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowState", Storage="_SGW_Workflow", ThisKey="WorkflowId", OtherKey="WorkflowId", IsForeignKey=true)]
		public SGW_Workflow SGW_Workflow
		{
			get
			{
				return this._SGW_Workflow.Entity;
			}
			set
			{
				SGW_Workflow previousValue = this._SGW_Workflow.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Workflow.Entity = null;
						previousValue.SGW_WorkflowStates.Remove(this);
					}
					this._SGW_Workflow.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStates.Add(this);
						this._WorkflowId = value.WorkflowId;
					}
					else
					{
						this._WorkflowId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Workflow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkflowStateTransitions(SGW_WorkflowStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowState = this;
		}
		
		private void detach_SGW_WorkflowStateTransitions(SGW_WorkflowStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowState = null;
		}
		
		private void attach_SGW_WorkflowStateTransitions1(SGW_WorkflowStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowState1 = this;
		}
		
		private void detach_SGW_WorkflowStateTransitions1(SGW_WorkflowStateTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowState1 = null;
		}
		
		private void attach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowState = this;
		}
		
		private void detach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowStateTransition")]
	public partial class SGW_WorkflowStateTransition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowId;
		
		private System.Guid _FromStateId;
		
		private System.Guid _ToStateId;
		
		private System.Guid _StateTransitionId;
		
		private bool _AutoTransition;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntityRef<SGW_WorkflowState> _SGW_WorkflowState;
		
		private EntityRef<SGW_WorkflowState> _SGW_WorkflowState1;
		
		private EntityRef<SGW_Workflow> _SGW_Workflow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnFromStateIdChanging(System.Guid value);
    partial void OnFromStateIdChanged();
    partial void OnToStateIdChanging(System.Guid value);
    partial void OnToStateIdChanged();
    partial void OnStateTransitionIdChanging(System.Guid value);
    partial void OnStateTransitionIdChanged();
    partial void OnAutoTransitionChanging(bool value);
    partial void OnAutoTransitionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_WorkflowStateTransition()
		{
			this._SGW_WorkflowState = default(EntityRef<SGW_WorkflowState>);
			this._SGW_WorkflowState1 = default(EntityRef<SGW_WorkflowState>);
			this._SGW_Workflow = default(EntityRef<SGW_Workflow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					if (this._SGW_Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FromStateId
		{
			get
			{
				return this._FromStateId;
			}
			set
			{
				if ((this._FromStateId != value))
				{
					if (this._SGW_WorkflowState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStateIdChanging(value);
					this.SendPropertyChanging();
					this._FromStateId = value;
					this.SendPropertyChanged("FromStateId");
					this.OnFromStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ToStateId
		{
			get
			{
				return this._ToStateId;
			}
			set
			{
				if ((this._ToStateId != value))
				{
					if (this._SGW_WorkflowState1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStateIdChanging(value);
					this.SendPropertyChanging();
					this._ToStateId = value;
					this.SendPropertyChanged("ToStateId");
					this.OnToStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateTransitionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StateTransitionId
		{
			get
			{
				return this._StateTransitionId;
			}
			set
			{
				if ((this._StateTransitionId != value))
				{
					this.OnStateTransitionIdChanging(value);
					this.SendPropertyChanging();
					this._StateTransitionId = value;
					this.SendPropertyChanged("StateTransitionId");
					this.OnStateTransitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoTransition", DbType="Bit NOT NULL")]
		public bool AutoTransition
		{
			get
			{
				return this._AutoTransition;
			}
			set
			{
				if ((this._AutoTransition != value))
				{
					this.OnAutoTransitionChanging(value);
					this.SendPropertyChanging();
					this._AutoTransition = value;
					this.SendPropertyChanged("AutoTransition");
					this.OnAutoTransitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowState_SGW_WorkflowStateTransition", Storage="_SGW_WorkflowState", ThisKey="FromStateId", OtherKey="StateId", IsForeignKey=true)]
		public SGW_WorkflowState SGW_WorkflowState
		{
			get
			{
				return this._SGW_WorkflowState.Entity;
			}
			set
			{
				SGW_WorkflowState previousValue = this._SGW_WorkflowState.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowState.Entity = null;
						previousValue.SGW_WorkflowStateTransitions.Remove(this);
					}
					this._SGW_WorkflowState.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStateTransitions.Add(this);
						this._FromStateId = value.StateId;
					}
					else
					{
						this._FromStateId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowState_SGW_WorkflowStateTransition1", Storage="_SGW_WorkflowState1", ThisKey="ToStateId", OtherKey="StateId", IsForeignKey=true)]
		public SGW_WorkflowState SGW_WorkflowState1
		{
			get
			{
				return this._SGW_WorkflowState1.Entity;
			}
			set
			{
				SGW_WorkflowState previousValue = this._SGW_WorkflowState1.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowState1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowState1.Entity = null;
						previousValue.SGW_WorkflowStateTransitions1.Remove(this);
					}
					this._SGW_WorkflowState1.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStateTransitions1.Add(this);
						this._ToStateId = value.StateId;
					}
					else
					{
						this._ToStateId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowState1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowStateTransition", Storage="_SGW_Workflow", ThisKey="WorkflowId", OtherKey="WorkflowId", IsForeignKey=true)]
		public SGW_Workflow SGW_Workflow
		{
			get
			{
				return this._SGW_Workflow.Entity;
			}
			set
			{
				SGW_Workflow previousValue = this._SGW_Workflow.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Workflow.Entity = null;
						previousValue.SGW_WorkflowStateTransitions.Remove(this);
					}
					this._SGW_Workflow.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStateTransitions.Add(this);
						this._WorkflowId = value.WorkflowId;
					}
					else
					{
						this._WorkflowId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Workflow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowStep")]
	public partial class SGW_WorkflowStep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowId;
		
		private System.Guid _StepId;
		
		private System.Guid _StepTypeId;
		
		private string _Name;
		
		private string _Comments;
		
		private System.Nullable<System.Guid> _SplitDecisionId;
		
		private System.Nullable<System.Guid> _ParticipantId;
		
		private bool _NotifyParticipant;
		
		private System.Guid _FromStateId;
		
		private string _JoinDecisionId;
		
		private int _UILeftPosition;
		
		private int _UITopPosition;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_Attachment> _SGW_Attachments;
		
		private EntitySet<SGW_WorkflowInstance> _SGW_WorkflowInstances;
		
		private EntitySet<SGW_WorkflowStepTransition> _SGW_WorkflowStepTransitions;
		
		private EntitySet<SGW_WorkflowStepTransition> _SGW_WorkflowStepTransitions1;
		
		private EntityRef<SGW_WorkflowState> _SGW_WorkflowState;
		
		private EntityRef<SGW_WorkflowParticipant> _SGW_WorkflowParticipant;
		
		private EntityRef<SGW_StepType> _SGW_StepType;
		
		private EntityRef<SGW_Workflow> _SGW_Workflow;
		
		private EntityRef<SGW_WorkflowStepSplitDecision> _SGW_WorkflowStepSplitDecision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnStepIdChanging(System.Guid value);
    partial void OnStepIdChanged();
    partial void OnStepTypeIdChanging(System.Guid value);
    partial void OnStepTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnSplitDecisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnSplitDecisionIdChanged();
    partial void OnParticipantIdChanging(System.Nullable<System.Guid> value);
    partial void OnParticipantIdChanged();
    partial void OnNotifyParticipantChanging(bool value);
    partial void OnNotifyParticipantChanged();
    partial void OnFromStateIdChanging(System.Guid value);
    partial void OnFromStateIdChanged();
    partial void OnJoinDecisionIdChanging(string value);
    partial void OnJoinDecisionIdChanged();
    partial void OnUILeftPositionChanging(int value);
    partial void OnUILeftPositionChanged();
    partial void OnUITopPositionChanging(int value);
    partial void OnUITopPositionChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_WorkflowStep()
		{
			this._SGW_Attachments = new EntitySet<SGW_Attachment>(new Action<SGW_Attachment>(this.attach_SGW_Attachments), new Action<SGW_Attachment>(this.detach_SGW_Attachments));
			this._SGW_WorkflowInstances = new EntitySet<SGW_WorkflowInstance>(new Action<SGW_WorkflowInstance>(this.attach_SGW_WorkflowInstances), new Action<SGW_WorkflowInstance>(this.detach_SGW_WorkflowInstances));
			this._SGW_WorkflowStepTransitions = new EntitySet<SGW_WorkflowStepTransition>(new Action<SGW_WorkflowStepTransition>(this.attach_SGW_WorkflowStepTransitions), new Action<SGW_WorkflowStepTransition>(this.detach_SGW_WorkflowStepTransitions));
			this._SGW_WorkflowStepTransitions1 = new EntitySet<SGW_WorkflowStepTransition>(new Action<SGW_WorkflowStepTransition>(this.attach_SGW_WorkflowStepTransitions1), new Action<SGW_WorkflowStepTransition>(this.detach_SGW_WorkflowStepTransitions1));
			this._SGW_WorkflowState = default(EntityRef<SGW_WorkflowState>);
			this._SGW_WorkflowParticipant = default(EntityRef<SGW_WorkflowParticipant>);
			this._SGW_StepType = default(EntityRef<SGW_StepType>);
			this._SGW_Workflow = default(EntityRef<SGW_Workflow>);
			this._SGW_WorkflowStepSplitDecision = default(EntityRef<SGW_WorkflowStepSplitDecision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					if (this._SGW_Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StepId
		{
			get
			{
				return this._StepId;
			}
			set
			{
				if ((this._StepId != value))
				{
					this.OnStepIdChanging(value);
					this.SendPropertyChanging();
					this._StepId = value;
					this.SendPropertyChanged("StepId");
					this.OnStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepTypeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StepTypeId
		{
			get
			{
				return this._StepTypeId;
			}
			set
			{
				if ((this._StepTypeId != value))
				{
					if (this._SGW_StepType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStepTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StepTypeId = value;
					this.SendPropertyChanged("StepTypeId");
					this.OnStepTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitDecisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SplitDecisionId
		{
			get
			{
				return this._SplitDecisionId;
			}
			set
			{
				if ((this._SplitDecisionId != value))
				{
					if (this._SGW_WorkflowStepSplitDecision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSplitDecisionIdChanging(value);
					this.SendPropertyChanging();
					this._SplitDecisionId = value;
					this.SendPropertyChanged("SplitDecisionId");
					this.OnSplitDecisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					if (this._SGW_WorkflowParticipant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyParticipant", DbType="Bit NOT NULL")]
		public bool NotifyParticipant
		{
			get
			{
				return this._NotifyParticipant;
			}
			set
			{
				if ((this._NotifyParticipant != value))
				{
					this.OnNotifyParticipantChanging(value);
					this.SendPropertyChanging();
					this._NotifyParticipant = value;
					this.SendPropertyChanged("NotifyParticipant");
					this.OnNotifyParticipantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FromStateId
		{
			get
			{
				return this._FromStateId;
			}
			set
			{
				if ((this._FromStateId != value))
				{
					if (this._SGW_WorkflowState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStateIdChanging(value);
					this.SendPropertyChanging();
					this._FromStateId = value;
					this.SendPropertyChanged("FromStateId");
					this.OnFromStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDecisionId", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string JoinDecisionId
		{
			get
			{
				return this._JoinDecisionId;
			}
			set
			{
				if ((this._JoinDecisionId != value))
				{
					this.OnJoinDecisionIdChanging(value);
					this.SendPropertyChanging();
					this._JoinDecisionId = value;
					this.SendPropertyChanged("JoinDecisionId");
					this.OnJoinDecisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UILeftPosition", DbType="Int NOT NULL")]
		public int UILeftPosition
		{
			get
			{
				return this._UILeftPosition;
			}
			set
			{
				if ((this._UILeftPosition != value))
				{
					this.OnUILeftPositionChanging(value);
					this.SendPropertyChanging();
					this._UILeftPosition = value;
					this.SendPropertyChanged("UILeftPosition");
					this.OnUILeftPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UITopPosition", DbType="Int NOT NULL")]
		public int UITopPosition
		{
			get
			{
				return this._UITopPosition;
			}
			set
			{
				if ((this._UITopPosition != value))
				{
					this.OnUITopPositionChanging(value);
					this.SendPropertyChanging();
					this._UITopPosition = value;
					this.SendPropertyChanged("UITopPosition");
					this.OnUITopPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_Attachment", Storage="_SGW_Attachments", ThisKey="StepId", OtherKey="StepId")]
		public EntitySet<SGW_Attachment> SGW_Attachments
		{
			get
			{
				return this._SGW_Attachments;
			}
			set
			{
				this._SGW_Attachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_WorkflowInstance", Storage="_SGW_WorkflowInstances", ThisKey="StepId", OtherKey="StepId")]
		public EntitySet<SGW_WorkflowInstance> SGW_WorkflowInstances
		{
			get
			{
				return this._SGW_WorkflowInstances;
			}
			set
			{
				this._SGW_WorkflowInstances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_WorkflowStepTransition", Storage="_SGW_WorkflowStepTransitions", ThisKey="StepId", OtherKey="FromStepId")]
		public EntitySet<SGW_WorkflowStepTransition> SGW_WorkflowStepTransitions
		{
			get
			{
				return this._SGW_WorkflowStepTransitions;
			}
			set
			{
				this._SGW_WorkflowStepTransitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_WorkflowStepTransition1", Storage="_SGW_WorkflowStepTransitions1", ThisKey="StepId", OtherKey="ToStepId")]
		public EntitySet<SGW_WorkflowStepTransition> SGW_WorkflowStepTransitions1
		{
			get
			{
				return this._SGW_WorkflowStepTransitions1;
			}
			set
			{
				this._SGW_WorkflowStepTransitions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowState_SGW_WorkflowStep", Storage="_SGW_WorkflowState", ThisKey="FromStateId", OtherKey="StateId", IsForeignKey=true)]
		public SGW_WorkflowState SGW_WorkflowState
		{
			get
			{
				return this._SGW_WorkflowState.Entity;
			}
			set
			{
				SGW_WorkflowState previousValue = this._SGW_WorkflowState.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowState.Entity = null;
						previousValue.SGW_WorkflowSteps.Remove(this);
					}
					this._SGW_WorkflowState.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowSteps.Add(this);
						this._FromStateId = value.StateId;
					}
					else
					{
						this._FromStateId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowParticipant_SGW_WorkflowStep", Storage="_SGW_WorkflowParticipant", ThisKey="ParticipantId", OtherKey="ParticipantId", IsForeignKey=true)]
		public SGW_WorkflowParticipant SGW_WorkflowParticipant
		{
			get
			{
				return this._SGW_WorkflowParticipant.Entity;
			}
			set
			{
				SGW_WorkflowParticipant previousValue = this._SGW_WorkflowParticipant.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowParticipant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowParticipant.Entity = null;
						previousValue.SGW_WorkflowSteps.Remove(this);
					}
					this._SGW_WorkflowParticipant.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowSteps.Add(this);
						this._ParticipantId = value.ParticipantId;
					}
					else
					{
						this._ParticipantId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SGW_WorkflowParticipant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_StepType_SGW_WorkflowStep", Storage="_SGW_StepType", ThisKey="StepTypeId", OtherKey="StepTypeId", IsForeignKey=true)]
		public SGW_StepType SGW_StepType
		{
			get
			{
				return this._SGW_StepType.Entity;
			}
			set
			{
				SGW_StepType previousValue = this._SGW_StepType.Entity;
				if (((previousValue != value) 
							|| (this._SGW_StepType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_StepType.Entity = null;
						previousValue.SGW_WorkflowSteps.Remove(this);
					}
					this._SGW_StepType.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowSteps.Add(this);
						this._StepTypeId = value.StepTypeId;
					}
					else
					{
						this._StepTypeId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_StepType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowStep", Storage="_SGW_Workflow", ThisKey="WorkflowId", OtherKey="WorkflowId", IsForeignKey=true)]
		public SGW_Workflow SGW_Workflow
		{
			get
			{
				return this._SGW_Workflow.Entity;
			}
			set
			{
				SGW_Workflow previousValue = this._SGW_Workflow.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Workflow.Entity = null;
						previousValue.SGW_WorkflowSteps.Remove(this);
					}
					this._SGW_Workflow.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowSteps.Add(this);
						this._WorkflowId = value.WorkflowId;
					}
					else
					{
						this._WorkflowId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Workflow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStepSplitDecision_SGW_WorkflowStep", Storage="_SGW_WorkflowStepSplitDecision", ThisKey="SplitDecisionId", OtherKey="SplitDecisionId", IsForeignKey=true)]
		public SGW_WorkflowStepSplitDecision SGW_WorkflowStepSplitDecision
		{
			get
			{
				return this._SGW_WorkflowStepSplitDecision.Entity;
			}
			set
			{
				SGW_WorkflowStepSplitDecision previousValue = this._SGW_WorkflowStepSplitDecision.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowStepSplitDecision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowStepSplitDecision.Entity = null;
						previousValue.SGW_WorkflowSteps.Remove(this);
					}
					this._SGW_WorkflowStepSplitDecision.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowSteps.Add(this);
						this._SplitDecisionId = value.SplitDecisionId;
					}
					else
					{
						this._SplitDecisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SGW_WorkflowStepSplitDecision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_Attachments(SGW_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep = this;
		}
		
		private void detach_SGW_Attachments(SGW_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep = null;
		}
		
		private void attach_SGW_WorkflowInstances(SGW_WorkflowInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep = this;
		}
		
		private void detach_SGW_WorkflowInstances(SGW_WorkflowInstance entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep = null;
		}
		
		private void attach_SGW_WorkflowStepTransitions(SGW_WorkflowStepTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep = this;
		}
		
		private void detach_SGW_WorkflowStepTransitions(SGW_WorkflowStepTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep = null;
		}
		
		private void attach_SGW_WorkflowStepTransitions1(SGW_WorkflowStepTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep1 = this;
		}
		
		private void detach_SGW_WorkflowStepTransitions1(SGW_WorkflowStepTransition entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStep1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowStepSplitDecision")]
	public partial class SGW_WorkflowStepSplitDecision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SplitDecisionId;
		
		private System.Nullable<System.Guid> _TriggerConditionId;
		
		private EntitySet<SGW_WorkflowStep> _SGW_WorkflowSteps;
		
		private EntityRef<SGW_Condition> _SGW_Condition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSplitDecisionIdChanging(System.Guid value);
    partial void OnSplitDecisionIdChanged();
    partial void OnTriggerConditionIdChanging(System.Nullable<System.Guid> value);
    partial void OnTriggerConditionIdChanged();
    #endregion
		
		public SGW_WorkflowStepSplitDecision()
		{
			this._SGW_WorkflowSteps = new EntitySet<SGW_WorkflowStep>(new Action<SGW_WorkflowStep>(this.attach_SGW_WorkflowSteps), new Action<SGW_WorkflowStep>(this.detach_SGW_WorkflowSteps));
			this._SGW_Condition = default(EntityRef<SGW_Condition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitDecisionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SplitDecisionId
		{
			get
			{
				return this._SplitDecisionId;
			}
			set
			{
				if ((this._SplitDecisionId != value))
				{
					this.OnSplitDecisionIdChanging(value);
					this.SendPropertyChanging();
					this._SplitDecisionId = value;
					this.SendPropertyChanged("SplitDecisionId");
					this.OnSplitDecisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerConditionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriggerConditionId
		{
			get
			{
				return this._TriggerConditionId;
			}
			set
			{
				if ((this._TriggerConditionId != value))
				{
					if (this._SGW_Condition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTriggerConditionIdChanging(value);
					this.SendPropertyChanging();
					this._TriggerConditionId = value;
					this.SendPropertyChanged("TriggerConditionId");
					this.OnTriggerConditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStepSplitDecision_SGW_WorkflowStep", Storage="_SGW_WorkflowSteps", ThisKey="SplitDecisionId", OtherKey="SplitDecisionId")]
		public EntitySet<SGW_WorkflowStep> SGW_WorkflowSteps
		{
			get
			{
				return this._SGW_WorkflowSteps;
			}
			set
			{
				this._SGW_WorkflowSteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Condition_SGW_WorkflowStepSplitDecision", Storage="_SGW_Condition", ThisKey="TriggerConditionId", OtherKey="ConditionId", IsForeignKey=true)]
		public SGW_Condition SGW_Condition
		{
			get
			{
				return this._SGW_Condition.Entity;
			}
			set
			{
				SGW_Condition previousValue = this._SGW_Condition.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Condition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Condition.Entity = null;
						previousValue.SGW_WorkflowStepSplitDecisions.Remove(this);
					}
					this._SGW_Condition.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStepSplitDecisions.Add(this);
						this._TriggerConditionId = value.ConditionId;
					}
					else
					{
						this._TriggerConditionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SGW_Condition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStepSplitDecision = this;
		}
		
		private void detach_SGW_WorkflowSteps(SGW_WorkflowStep entity)
		{
			this.SendPropertyChanging();
			entity.SGW_WorkflowStepSplitDecision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_WorkflowStepTransition")]
	public partial class SGW_WorkflowStepTransition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowId;
		
		private System.Guid _FromStepId;
		
		private System.Guid _ToStepId;
		
		private System.Guid _TransitionId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntityRef<SGW_WorkflowStep> _SGW_WorkflowStep;
		
		private EntityRef<SGW_WorkflowStep> _SGW_WorkflowStep1;
		
		private EntityRef<SGW_Workflow> _SGW_Workflow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnFromStepIdChanging(System.Guid value);
    partial void OnFromStepIdChanged();
    partial void OnToStepIdChanging(System.Guid value);
    partial void OnToStepIdChanged();
    partial void OnTransitionIdChanging(System.Guid value);
    partial void OnTransitionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_WorkflowStepTransition()
		{
			this._SGW_WorkflowStep = default(EntityRef<SGW_WorkflowStep>);
			this._SGW_WorkflowStep1 = default(EntityRef<SGW_WorkflowStep>);
			this._SGW_Workflow = default(EntityRef<SGW_Workflow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					if (this._SGW_Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStepId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FromStepId
		{
			get
			{
				return this._FromStepId;
			}
			set
			{
				if ((this._FromStepId != value))
				{
					if (this._SGW_WorkflowStep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStepIdChanging(value);
					this.SendPropertyChanging();
					this._FromStepId = value;
					this.SendPropertyChanged("FromStepId");
					this.OnFromStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStepId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ToStepId
		{
			get
			{
				return this._ToStepId;
			}
			set
			{
				if ((this._ToStepId != value))
				{
					if (this._SGW_WorkflowStep1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStepIdChanging(value);
					this.SendPropertyChanging();
					this._ToStepId = value;
					this.SendPropertyChanged("ToStepId");
					this.OnToStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TransitionId
		{
			get
			{
				return this._TransitionId;
			}
			set
			{
				if ((this._TransitionId != value))
				{
					this.OnTransitionIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionId = value;
					this.SendPropertyChanged("TransitionId");
					this.OnTransitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_WorkflowStepTransition", Storage="_SGW_WorkflowStep", ThisKey="FromStepId", OtherKey="StepId", IsForeignKey=true)]
		public SGW_WorkflowStep SGW_WorkflowStep
		{
			get
			{
				return this._SGW_WorkflowStep.Entity;
			}
			set
			{
				SGW_WorkflowStep previousValue = this._SGW_WorkflowStep.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowStep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowStep.Entity = null;
						previousValue.SGW_WorkflowStepTransitions.Remove(this);
					}
					this._SGW_WorkflowStep.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStepTransitions.Add(this);
						this._FromStepId = value.StepId;
					}
					else
					{
						this._FromStepId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowStep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_WorkflowStep_SGW_WorkflowStepTransition1", Storage="_SGW_WorkflowStep1", ThisKey="ToStepId", OtherKey="StepId", IsForeignKey=true)]
		public SGW_WorkflowStep SGW_WorkflowStep1
		{
			get
			{
				return this._SGW_WorkflowStep1.Entity;
			}
			set
			{
				SGW_WorkflowStep previousValue = this._SGW_WorkflowStep1.Entity;
				if (((previousValue != value) 
							|| (this._SGW_WorkflowStep1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_WorkflowStep1.Entity = null;
						previousValue.SGW_WorkflowStepTransitions1.Remove(this);
					}
					this._SGW_WorkflowStep1.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStepTransitions1.Add(this);
						this._ToStepId = value.StepId;
					}
					else
					{
						this._ToStepId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_WorkflowStep1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workflow_SGW_WorkflowStepTransition", Storage="_SGW_Workflow", ThisKey="WorkflowId", OtherKey="WorkflowId", IsForeignKey=true)]
		public SGW_Workflow SGW_Workflow
		{
			get
			{
				return this._SGW_Workflow.Entity;
			}
			set
			{
				SGW_Workflow previousValue = this._SGW_Workflow.Entity;
				if (((previousValue != value) 
							|| (this._SGW_Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SGW_Workflow.Entity = null;
						previousValue.SGW_WorkflowStepTransitions.Remove(this);
					}
					this._SGW_Workflow.Entity = value;
					if ((value != null))
					{
						value.SGW_WorkflowStepTransitions.Add(this);
						this._WorkflowId = value.WorkflowId;
					}
					else
					{
						this._WorkflowId = default(System.Guid);
					}
					this.SendPropertyChanged("SGW_Workflow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SGW_Workgroup")]
	public partial class SGW_Workgroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkgroupId;
		
		private System.Guid _ParentWorkgroupId;
		
		private string _Name;
		
		private string _WorkgroupPath;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private EntitySet<SGW_WorkgroupMember> _SGW_WorkgroupMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkgroupIdChanging(System.Guid value);
    partial void OnWorkgroupIdChanged();
    partial void OnParentWorkgroupIdChanging(System.Guid value);
    partial void OnParentWorkgroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWorkgroupPathChanging(string value);
    partial void OnWorkgroupPathChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SGW_Workgroup()
		{
			this._SGW_WorkgroupMembers = new EntitySet<SGW_WorkgroupMember>(new Action<SGW_WorkgroupMember>(this.attach_SGW_WorkgroupMembers), new Action<SGW_WorkgroupMember>(this.detach_SGW_WorkgroupMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkgroupId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WorkgroupId
		{
			get
			{
				return this._WorkgroupId;
			}
			set
			{
				if ((this._WorkgroupId != value))
				{
					this.OnWorkgroupIdChanging(value);
					this.SendPropertyChanging();
					this._WorkgroupId = value;
					this.SendPropertyChanged("WorkgroupId");
					this.OnWorkgroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentWorkgroupId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentWorkgroupId
		{
			get
			{
				return this._ParentWorkgroupId;
			}
			set
			{
				if ((this._ParentWorkgroupId != value))
				{
					this.OnParentWorkgroupIdChanging(value);
					this.SendPropertyChanging();
					this._ParentWorkgroupId = value;
					this.SendPropertyChanged("ParentWorkgroupId");
					this.OnParentWorkgroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkgroupPath", DbType="NVarChar(MAX)")]
		public string WorkgroupPath
		{
			get
			{
				return this._WorkgroupPath;
			}
			set
			{
				if ((this._WorkgroupPath != value))
				{
					this.OnWorkgroupPathChanging(value);
					this.SendPropertyChanging();
					this._WorkgroupPath = value;
					this.SendPropertyChanged("WorkgroupPath");
					this.OnWorkgroupPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SGW_Workgroup_SGW_WorkgroupMember", Storage="_SGW_WorkgroupMembers", ThisKey="WorkgroupId", OtherKey="WorkgroupId")]
		public EntitySet<SGW_WorkgroupMember> SGW_WorkgroupMembers
		{
			get
			{
				return this._SGW_WorkgroupMembers;
			}
			set
			{
				this._SGW_WorkgroupMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SGW_WorkgroupMembers(SGW_WorkgroupMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workgroup = this;
		}
		
		private void detach_SGW_WorkgroupMembers(SGW_WorkgroupMember entity)
		{
			this.SendPropertyChanging();
			entity.SGW_Workgroup = null;
		}
	}
}
#pragma warning restore 1591
